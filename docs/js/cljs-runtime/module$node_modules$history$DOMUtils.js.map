{
"version":3,
"file":"module$node_modules$history$DOMUtils.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,qCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGtHD,OAAAE,WAAA,CAAqB,CAAA,CACLF,QAAAG,UAAA,CAAoB,EAAqB,WAArB,GAAG,MAAOC,OAAV,EAAoCC,CAAAD,MAAAC,SAApC,EAAuDC,CAAAF,MAAAC,SAAAC,cAAvD,CAEbN,QAAAO,iBAAA,CAA2BC,QAAyB,CAACC,IAAD,CAAOC,KAAP,CAAcC,QAAd,CAAwB,CACjG,MAAOF,KAAAF,iBAAA,CAAwBE,IAAAF,iBAAA,CAAsBG,KAAtB,CAA6BC,QAA7B,CAAuC,CAAA,CAAvC,CAAxB,CAAwEF,IAAAG,YAAA,CAAiB,IAAjB,CAAwBF,KAAxB,CAA+BC,QAA/B,CADkB,CAIzEX,QAAAa,oBAAA,CAA8BC,QAA4B,CAACL,IAAD,CAAOC,KAAP,CAAcC,QAAd,CAAwB,CAC1G,MAAOF,KAAAI,oBAAA,CAA2BJ,IAAAI,oBAAA,CAAyBH,KAAzB;AAAgCC,QAAhC,CAA0C,CAAA,CAA1C,CAA3B,CAA8EF,IAAAM,YAAA,CAAiB,IAAjB,CAAwBL,KAAxB,CAA+BC,QAA/B,CADqB,CAItFX,QAAAgB,gBAAA,CAA0BC,QAAwB,CAACC,OAAD,CAAUC,QAAV,CAAoB,CAC1F,MAAOA,SAAA,CAASf,MAAAgB,QAAA,CAAeF,OAAf,CAAT,CADmF,CAWtElB,QAAAqB,gBAAA,CAA0BC,QAAwB,EAAG,CACzE,IAAIC,GAAKnB,MAAAoB,UAAAC,UAET,OAAmC,EAAnC,GAAKF,EAAAG,QAAA,CAAW,YAAX,CAAL,EAAuE,EAAvE,GAAwCH,EAAAG,QAAA,CAAW,aAAX,CAAxC,EAA8G,EAA9G,GAA6EH,EAAAG,QAAA,CAAW,eAAX,CAA7E,EAA6I,EAA7I,GAAmHH,EAAAG,QAAA,CAAW,QAAX,CAAnH,EAAmL,EAAnL,GAAkJH,EAAAG,QAAA,CAAW,eAAX,CAAlJ,CAEOtB,MAAAuB,QAFP,EAEyB,WAFzB,EAEwCvB,OAAAuB,QAFxC,CAA6L,CAAA,CAHpH,CAYxC3B,QAAA4B,6BAAA,CAAuCC,QAAqC,EAAG,CAChH,MAA0D,EAA1D,GAAOzB,MAAAoB,UAAAC,UAAAC,QAAA,CAAmC,SAAnC,CADyG,CAO3E1B;OAAA8B,iCAAA,CAA2CC,QAAyC,EAAG,CAC5H,MAA0D,EAA1D,GAAO3B,MAAAoB,UAAAC,UAAAC,QAAA,CAAmC,SAAnC,CADqH,CAS9F1B,QAAAgC,0BAAA,CAAoCC,QAAkC,CAACvB,KAAD,CAAQ,CAC5G,MAAuBwB,KAAAA,EAAvB,GAAOxB,KAAAyB,MAAP,EAA8E,EAA9E,GAAoCX,SAAAC,UAAAC,QAAA,CAA4B,OAA5B,CADwE,CArDQ;",
"sources":["node_modules/history/DOMUtils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$history$DOMUtils\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nexports.__esModule = true;\nvar canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nvar addEventListener = exports.addEventListener = function addEventListener(node, event, listener) {\n  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);\n};\n\nvar removeEventListener = exports.removeEventListener = function removeEventListener(node, event, listener) {\n  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);\n};\n\nvar getConfirmation = exports.getConfirmation = function getConfirmation(message, callback) {\n  return callback(window.confirm(message));\n}; // eslint-disable-line no-alert\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\nvar supportsHistory = exports.supportsHistory = function supportsHistory() {\n  var ua = window.navigator.userAgent;\n\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n\n  return window.history && 'pushState' in window.history;\n};\n\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\nvar supportsPopStateOnHashChange = exports.supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n};\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\nvar supportsGoWithoutReloadUsingHash = exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n};\n\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\nvar isExtraneousPopstateEvent = exports.isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n};\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","__esModule","canUseDOM","window","document","createElement","addEventListener","exports.addEventListener","node","event","listener","attachEvent","removeEventListener","exports.removeEventListener","detachEvent","getConfirmation","exports.getConfirmation","message","callback","confirm","supportsHistory","exports.supportsHistory","ua","navigator","userAgent","indexOf","history","supportsPopStateOnHashChange","exports.supportsPopStateOnHashChange","supportsGoWithoutReloadUsingHash","exports.supportsGoWithoutReloadUsingHash","isExtraneousPopstateEvent","exports.isExtraneousPopstateEvent","undefined","state"]
}
