{
"version":3,
"file":"module$node_modules$prismjs$components$prism_php.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/prismjs/components/prism-php.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$prismjs$components$prism_php\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n *\n * Supports the following:\n * \t\t- Extends clike syntax\n * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n * \t\t- Smarter constant and function matching\n *\n * Adds the following new token classes:\n * \t\tconstant, delimiter, variable, function, package\n */\n\nPrism.languages.php = Prism.languages.extend('clike', {\n\t'keyword': /\\b(and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,\n\t'constant': /\\b[A-Z0-9_]{2,}\\b/,\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|\\/\\/.*)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t}\n});\n\n// Shell-like comments are matched after strings, because they are less\n// common than strings containing hashes...\nPrism.languages.insertBefore('php', 'class-name', {\n\t'shell-comment': {\n\t\tpattern: /(^|[^\\\\])#.*/,\n\t\tlookbehind: true,\n\t\talias: 'comment'\n\t}\n});\n\nPrism.languages.insertBefore('php', 'keyword', {\n\t'delimiter': /\\?>|<\\?(?:php)?/i,\n\t'variable': /\\$\\w+\\b/i,\n\t'package': {\n\t\tpattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /\\\\/\n\t\t}\n\t}\n});\n\n// Must be defined after the function pattern\nPrism.languages.insertBefore('php', 'operator', {\n\t'property': {\n\t\tpattern: /(->)[\\w]+/,\n\t\tlookbehind: true\n\t}\n});\n\n// Add HTML support of the markup language exists\nif (Prism.languages.markup) {\n\n\t// Tokenize all inline PHP blocks that are wrapped in <?php ?>\n\t// This allows for easy PHP + markup highlighting\n\tPrism.hooks.add('before-highlight', function(env) {\n\t\tif (env.language !== 'php') {\n\t\t\treturn;\n\t\t}\n\n\t\tenv.tokenStack = [];\n\n\t\tenv.backupCode = env.code;\n\t\tenv.code = env.code.replace(/(?:<\\?php|<\\?)[\\w\\W]*?(?:\\?>)/ig, function(match) {\n\t\t\tenv.tokenStack.push(match);\n\n\t\t\treturn '{{{PHP' + env.tokenStack.length + '}}}';\n\t\t});\n\t});\n\n\t// Restore env.code for other plugins (e.g. line-numbers)\n\tPrism.hooks.add('before-insert', function(env) {\n\t\tif (env.language === 'php') {\n\t\t\tenv.code = env.backupCode;\n\t\t\tdelete env.backupCode;\n\t\t}\n\t});\n\n\t// Re-insert the tokens after highlighting\n\tPrism.hooks.add('after-highlight', function(env) {\n\t\tif (env.language !== 'php') {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, t; t = env.tokenStack[i]; i++) {\n\t\t\t// The replace prevents $$, $&, $`, $', $n, $nn from being interpreted as special patterns\n\t\t\tenv.highlightedCode = env.highlightedCode.replace('{{{PHP' + (i + 1) + '}}}', Prism.highlight(t, env.grammar, 'php').replace(/\\$/g, '$$$$'));\n\t\t}\n\n\t\tenv.element.innerHTML = env.highlightedCode;\n\t});\n\n\t// Wrap tokens in classes that are missing them\n\tPrism.hooks.add('wrap', function(env) {\n\t\tif (env.language === 'php' && env.type === 'markup') {\n\t\t\tenv.content = env.content.replace(/(\\{\\{\\{PHP[0-9]+\\}\\}\\})/g, \"<span class=\\\"token php\\\">$1</span>\");\n\t\t}\n\t});\n\n\t// Add the rules before all others\n\tPrism.languages.insertBefore('php', 'comment', {\n\t\t'markup': {\n\t\t\tpattern: /<[^?]\\/?(.*?)>/,\n\t\t\tinside: Prism.languages.markup\n\t\t},\n\t\t'php': /\\{\\{\\{PHP[0-9]+\\}\\}\\}/\n\t});\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Prism","languages","php","extend","pattern","lookbehind","greedy","insertBefore","alias","inside","punctuation","markup","hooks","add","env","language","tokenStack","backupCode","code","replace","match","push","length","i","t","highlightedCode","highlight","grammar","element","innerHTML","type","content"]
}
