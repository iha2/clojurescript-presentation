{
"version":3,
"file":"module$node_modules$react_redux$lib$utils$Subscription.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,uDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgBxIC,QAASA,yBAAwB,EAAG,CAGlC,IAAIC,QAAU,EAAd,CACIC,KAAO,EAEX,OAAO,CACLC,MAAOA,QAAc,EAAG,CAEtBF,OAAA,CADAC,IACA,CAdQE,IAYc,CADnB,CAKLC,OAAQA,QAAe,EAAG,CAExB,IADA,IAAIC,UAAYL,OAAZK,CAAsBJ,IAA1B,CACSK,EAAI,CAAb,CAAgBA,CAAhB,CAAoBD,SAAAE,OAApB,CAAsCD,CAAA,EAAtC,CACED,SAAA,CAAUC,CAAV,CAAA,EAHsB,CALrB,CAWLE,IAAKA,QAAY,EAAG,CAClB,MAAOP,KADW,CAXf,CAcLQ,UAAWA,QAAkB,CAACC,QAAD,CAAW,CACtC,IAAIC,aAAe,CAAA,CACfV,KAAJ,GAAaD,OAAb,GAAsBC,IAAtB,CAA6BD,OAAAY,MAAA,EAA7B,CACAX,KAAAY,KAAA,CAAUH,QAAV,CAEA,OAAOI,SAAoB,EAAG,CACvBH,YAAL,EA/BMR,IA+BN,GAAqBH,OAArB;CACAW,YAGA,CAHe,CAAA,CAGf,CADIV,IACJ,GADaD,OACb,GADsBC,IACtB,CAD6BD,OAAAY,MAAA,EAC7B,EAAAX,IAAAc,OAAA,CAAYd,IAAAe,QAAA,CAAaN,QAAb,CAAZ,CAAoC,CAApC,CAJA,CAD4B,CALQ,CAdnC,CAN2B,CAbpCb,OAAAoB,WAAA,CAAqB,CAAA,CASrB,KAAIC,cAAgB,CAClBd,OAAQA,QAAe,EAAG,EADR,CAwChBe,OAAAA,CAAe,QAAS,EAAG,CAC7BA,QAASA,aAAY,CAACC,KAAD,CAAQC,SAAR,CAAmBC,aAAnB,CAAkC,CAhDP,GAAI,EAiDlCC,IAjDkC,WAiD5BJ,aAjD4B,CAAJ,CAA0C,KAAM,KAAIK,SAAJ,CAAc,mCAAd,CAAN,CAmDxF,IAAAJ,MAAA,CAAaA,KACb,KAAAC,UAAA,CAAiBA,SACjB,KAAAC,cAAA,CAAqBA,aACrB,KAAAR,YAAA,CAAmB,IACnB,KAAAT,UAAA,CAAiBa,aAPoC,CAUvDC,YAAAM,UAAAC,aAAA,CAAsCC,QAAqB,CAACjB,QAAD,CAAW,CACpE,IAAAkB,aAAA,EACA;MAAO,KAAAvB,UAAAI,UAAA,CAAyBC,QAAzB,CAF6D,CAKtES,aAAAM,UAAAI,iBAAA,CAA0CC,QAAyB,EAAG,CACpE,IAAAzB,UAAAD,OAAA,EADoE,CAItEe,aAAAM,UAAAd,aAAA,CAAsCoB,QAAqB,EAAG,CAC5D,MAAO,CAAA,CAAQ,IAAAjB,YAD6C,CAI9DK,aAAAM,UAAAG,aAAA,CAAsCI,QAAqB,EAAG,CACvD,IAAAlB,YAAL,GACE,IAAAA,YAEA,CAFmB,IAAAO,UAAA,CAAiB,IAAAA,UAAAK,aAAA,CAA4B,IAAAJ,cAA5B,CAAjB,CAAmE,IAAAF,MAAAX,UAAA,CAAqB,IAAAa,cAArB,CAEtF,CAAA,IAAAjB,UAAA,CAAiBN,wBAAA,EAHnB,CAD4D,CAQ9DoB,aAAAM,UAAAQ,eAAA,CAAwCC,QAAuB,EAAG,CAC5D,IAAApB,YAAJ,GACE,IAAAA,YAAA,EAGA;AAFA,IAAAA,YAEA,CAFmB,IAEnB,CADA,IAAAT,UAAAH,MAAA,EACA,CAAA,IAAAG,UAAA,CAAiBa,aAJnB,CADgE,CASlE,OAAOC,aAzCsB,CAAZ,EA4CnBtB,QAAAsC,QAAA,CAAkBhB,MAhGsH;",
"sources":["node_modules/react-redux/lib/utils/Subscription.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_redux$lib$utils$Subscription\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nvar CLEARED = null;\nvar nullListeners = {\n  notify: function notify() {}\n};\n\nfunction createListenerCollection() {\n  // the current/next pattern is copied from redux's createStore code.\n  // TODO: refactor+expose that code to be reusable here?\n  var current = [];\n  var next = [];\n\n  return {\n    clear: function clear() {\n      next = CLEARED;\n      current = CLEARED;\n    },\n    notify: function notify() {\n      var listeners = current = next;\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i]();\n      }\n    },\n    get: function get() {\n      return next;\n    },\n    subscribe: function subscribe(listener) {\n      var isSubscribed = true;\n      if (next === current) next = current.slice();\n      next.push(listener);\n\n      return function unsubscribe() {\n        if (!isSubscribed || current === CLEARED) return;\n        isSubscribed = false;\n\n        if (next === current) next = current.slice();\n        next.splice(next.indexOf(listener), 1);\n      };\n    }\n  };\n}\n\nvar Subscription = function () {\n  function Subscription(store, parentSub, onStateChange) {\n    _classCallCheck(this, Subscription);\n\n    this.store = store;\n    this.parentSub = parentSub;\n    this.onStateChange = onStateChange;\n    this.unsubscribe = null;\n    this.listeners = nullListeners;\n  }\n\n  Subscription.prototype.addNestedSub = function addNestedSub(listener) {\n    this.trySubscribe();\n    return this.listeners.subscribe(listener);\n  };\n\n  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {\n    this.listeners.notify();\n  };\n\n  Subscription.prototype.isSubscribed = function isSubscribed() {\n    return Boolean(this.unsubscribe);\n  };\n\n  Subscription.prototype.trySubscribe = function trySubscribe() {\n    if (!this.unsubscribe) {\n      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);\n\n      this.listeners = createListenerCollection();\n    }\n  };\n\n  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n      this.unsubscribe = null;\n      this.listeners.clear();\n      this.listeners = nullListeners;\n    }\n  };\n\n  return Subscription;\n}();\n\nexports.default = Subscription;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","createListenerCollection","current","next","clear","CLEARED","notify","listeners","i","length","get","subscribe","listener","isSubscribed","slice","push","unsubscribe","splice","indexOf","__esModule","nullListeners","Subscription","store","parentSub","onStateChange","instance","TypeError","prototype","addNestedSub","Subscription.prototype.addNestedSub","trySubscribe","notifyNestedSubs","Subscription.prototype.notifyNestedSubs","Subscription.prototype.isSubscribed","Subscription.prototype.trySubscribe","tryUnsubscribe","Subscription.prototype.tryUnsubscribe","default"]
}
