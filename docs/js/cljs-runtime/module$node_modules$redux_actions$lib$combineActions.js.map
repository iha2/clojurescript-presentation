{
"version":3,
"file":"module$node_modules$redux_actions$lib$combineActions.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,qDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAkCtIC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAAC,WAAP,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAErCG,QAASA,kBAAiB,CAACC,IAAD,CAAO,CAC/B,MAAO,CAAC,CAAA,CAAGC,UAAAH,QAAJ,EAAwBE,IAAxB,CAAP,EAAwC,CAAC,CAAA,CAAGE,YAAAJ,QAAJ,EAA0BE,IAA1B,CAAxC,EAA2E,CAAC,CAAA,CAAGG,UAAAL,QAAJ,EAAwBE,IAAxB,CAD5C,CAIjCI,QAASA,mBAAkB,CAACC,KAAD,CAAQ,CACjC,MAAI,CAAC,CAAA,CAAGC,SAAAR,QAAJ,EAAuBO,KAAvB,CAAJ,CACS,CAAA,CADT,CAGOA,KAAAE,MAAA,CAAYR,iBAAZ,CAJ0B,CArCnCS,MAAAC,eAAA,CAAsBhB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CiB,MAAO,CAAA,CADoC,CAA7C,CAGAjB,QAAAK,QAAA;AAyCAa,QAAuB,EAAG,CACxB,IADwB,IACfC,KAAOC,SAAAC,OADQ,CACUC,aAAeC,KAAA,CAAMJ,IAAN,CADzB,CACsCK,KAAO,CAArE,CAAwEA,IAAxE,CAA+EL,IAA/E,CAAqFK,IAAA,EAArF,CACEF,YAAA,CAAaE,IAAb,CAAA,CAAqBJ,SAAA,CAAUI,IAAV,CAGvB,EAAC,CAAA,CAAGC,WAAApB,QAAJ,EAAyBM,kBAAA,CAAmBW,YAAnB,CAAzB,CAA2D,kEAA3D,CACA,KAAII,mBAAqBJ,YAAAK,IAAA,CAAiBC,UAAAvB,QAAjB,CAAAwB,KAAA,CAA0CC,UAAAC,sBAA1C,CACzB,OAAO,CAAEC,SAAUA,QAAiB,EAAG,CACnC,MAAON,mBAD4B,CAAhC,CAPiB,CAvCtBO,OAAAA,CAAanC,OAAA,CAAQ,uCAAR,CAEjB,KAAI2B,YAAcvB,sBAAA,CAAuB+B,MAAvB,CAEdC;MAAAA,CAAcpC,OAAA,CAAQ,wDAAR,CAElB,KAAIW,aAAeP,sBAAA,CAAuBgC,MAAvB,CAEfC,OAAAA,CAAYrC,OAAA,CAAQ,sDAAR,CAEhB,KAAIY,WAAaR,sBAAA,CAAuBiC,MAAvB,CAEbC,OAAAA,CAAWtC,OAAA,CAAQ,qDAAR,CAEf,KAAIe,UAAYX,sBAAA,CAAuBkC,MAAvB,CAEZC,OAAAA,CAAYvC,OAAA,CAAQ,sDAAR,CAEhB,KAAI8B,WAAa1B,sBAAA,CAAuBmC,MAAvB,CAEbC,OAAAA,CAAYxC,OAAA,CAAQ,sDAAR,CAEhB;IAAIU,WAAaN,sBAAA,CAAuBoC,MAAvB,CAAjB,CAEIR,WAAahC,OAAA,CAAQ,iDAAR,CAhCqH;",
"sources":["node_modules/redux-actions/lib/combineActions.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$redux_actions$lib$combineActions\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = combineActions;\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _isFunction = require('./utils/isFunction');\n\nvar _isFunction2 = _interopRequireDefault(_isFunction);\n\nvar _isSymbol = require('./utils/isSymbol');\n\nvar _isSymbol2 = _interopRequireDefault(_isSymbol);\n\nvar _isEmpty = require('./utils/isEmpty');\n\nvar _isEmpty2 = _interopRequireDefault(_isEmpty);\n\nvar _toString = require('./utils/toString');\n\nvar _toString2 = _interopRequireDefault(_toString);\n\nvar _isString = require('./utils/isString');\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isValidActionType(type) {\n  return (0, _isString2.default)(type) || (0, _isFunction2.default)(type) || (0, _isSymbol2.default)(type);\n}\n\nfunction isValidActionTypes(types) {\n  if ((0, _isEmpty2.default)(types)) {\n    return false;\n  }\n  return types.every(isValidActionType);\n}\n\nfunction combineActions() {\n  for (var _len = arguments.length, actionsTypes = Array(_len), _key = 0; _key < _len; _key++) {\n    actionsTypes[_key] = arguments[_key];\n  }\n\n  (0, _invariant2.default)(isValidActionTypes(actionsTypes), 'Expected action types to be strings, symbols, or action creators');\n  var combinedActionType = actionsTypes.map(_toString2.default).join(_constants.ACTION_TYPE_DELIMITER);\n  return { toString: function toString() {\n      return combinedActionType;\n    } };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","_interopRequireDefault","obj","__esModule","default","isValidActionType","type","_isString2","_isFunction2","_isSymbol2","isValidActionTypes","types","_isEmpty2","every","Object","defineProperty","value","combineActions","_len","arguments","length","actionsTypes","Array","_key","_invariant2","combinedActionType","map","_toString2","join","_constants","ACTION_TYPE_DELIMITER","toString","_invariant","_isFunction","_isSymbol","_isEmpty","_toString","_isString"]
}
