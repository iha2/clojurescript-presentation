{
"version":3,
"file":"module$node_modules$lodash$_createCurry.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IACrHC,MAAQJ,OAAA,CAAQ,mCAAR,CAD6G,CAErHK,WAAaL,OAAA,CAAQ,wCAAR,CAFwG,CAGrHM,aAAeN,OAAA,CAAQ,0CAAR,CAHsG,CAIrHO,cAAgBP,OAAA,CAAQ,2CAAR,CAJqG,CAKrHQ,UAAYR,OAAA,CAAQ,uCAAR,CALyG,CAMrHS,eAAiBT,OAAA,CAAQ,4CAAR,CANoG,CAOrHU,KAAOV,OAAA,CAAQ,kCAAR,CAuCXC;MAAAC,QAAA,CA5BAS,QAAoB,CAACC,IAAD,CAAOC,OAAP,CAAgBC,KAAhB,CAAuB,CAGzCC,QAASA,QAAO,EAAG,CAMjB,IANiB,IACbC,OAASC,SAAAD,OADI,CAEbE,KAAOC,KAAA,CAAMH,MAAN,CAFM,CAGbI,MAAQJ,MAHK,CAIbK,YAAcb,SAAA,CAAUO,OAAV,CAElB,CAAOK,KAAA,EAAP,CAAA,CACEF,IAAA,CAAKE,KAAL,CAAA,CAAcH,SAAA,CAAUG,KAAV,CAEZE,MAAAA,CAAoB,CAAV,CAACN,MAAD,EAAeE,IAAA,CAAK,CAAL,CAAf,GAA2BG,WAA3B,EAA0CH,IAAA,CAAKF,MAAL,CAAc,CAAd,CAA1C,GAA+DK,WAA/D,CACV,EADU,CAEVZ,cAAA,CAAeS,IAAf,CAAqBG,WAArB,CAEJL,OAAA,EAAUM,KAAAN,OACV,OAAIA,OAAJ,CAAaF,KAAb,CACSP,aAAA,CACLK,IADK,CACCC,OADD,CACUP,YADV,CACwBS,OAAAM,YADxB,CAC6CE,IAAAA,EAD7C,CAELL,IAFK,CAECI,KAFD,CAEUC,IAAAA,EAFV,CAEqBA,IAAAA,EAFrB,CAEgCT,KAFhC,CAEwCE,MAFxC,CADT,CAMOZ,KAAA,CADG,IAADoB,EAAS,IAATA,GAAkBd,IAAlBc,EAA0B,IAA1BA,WAA0CT,QAA1CS,CAAqDC,IAArDD;AAA4DZ,IAC9D,CAAU,IAAV,CAAgBM,IAAhB,CApBU,CAFnB,IAAIO,KAAOpB,UAAA,CAAWO,IAAX,CAwBX,OAAOG,QAzBkC,CAlB8E;",
"sources":["node_modules/lodash/_createCurry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_createCurry\"] = function(global,process,require,module,exports,shadow$shims) {\nvar apply = require('./_apply'),\n    createCtor = require('./_createCtor'),\n    createHybrid = require('./_createHybrid'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n\n/**\n * Creates a function that wraps `func` to enable currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {number} arity The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCurry(func, bitmask, arity) {\n  var Ctor = createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length,\n        placeholder = getHolder(wrapper);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n      ? []\n      : replaceHolders(args, placeholder);\n\n    length -= holders.length;\n    if (length < arity) {\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, undefined,\n        args, holders, undefined, undefined, arity - length);\n    }\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return apply(fn, this, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createCurry;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","apply","createCtor","createHybrid","createRecurry","getHolder","replaceHolders","root","createCurry","func","bitmask","arity","wrapper","length","arguments","args","Array","index","placeholder","holders","undefined","fn","Ctor"]
}
