{
"version":3,
"file":"module$node_modules$prismjs$components$prism_scss.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,kDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACnIC,KAAAC,UAAAC,KAAA,CAAuBF,KAAAC,UAAAE,OAAA,CAAuB,KAAvB,CAA8B,CACpD,QAAW,CACVC,QAAS,sCADC,CAEVC,WAAY,CAAA,CAFF,CADyC,CAKpD,OAAU,CACTD,QAAS,yCADA,CAETE,OAAQ,CACP,KAAQ,SADD,CAFC,CAL0C,CAapD,IAAO,yBAb6C,CAqBpD,SAAY,CAEXF,QAAS,2FAFE,CAGXE,OAAQ,CACP,OAAU,CACTF,QAAS,GADA,CAETG,MAAO,WAFE,CADH;AAKP,YAAe,UALR,CAMP,SAAY,0BANL,CAHG,CArBwC,CAA9B,CAmCvBP,MAAAC,UAAAO,aAAA,CAA6B,MAA7B,CAAqC,QAArC,CAA+C,CAC9C,QAAW,CACV,qGADU,CAEV,CACCJ,QAAS,2BADV,CAECC,WAAY,CAAA,CAFb,CAFU,CADmC,CAA/C,CAUAL,MAAAC,UAAAC,KAAAO,SAAA,CAAgC,CAC/BL,QAAS,8CADsB,CAE/BE,OAAQ,CACP,SAAY,0BADL,CAFuB,CAOhCN,MAAAC,UAAAO,aAAA,CAA6B,MAA7B,CAAqC,WAArC,CAAkD,CAEjD,SAAY,0BAFqC,CAAlD,CAKAR,MAAAC,UAAAO,aAAA,CAA6B,MAA7B;AAAqC,UAArC,CAAiD,CAChD,YAAe,CACdJ,QAAS,UADK,CAEdG,MAAO,UAFO,CADiC,CAKhD,UAAa,CACZH,QAAS,4BADG,CAEZG,MAAO,SAFK,CALmC,CAShD,UAAW,oBATqC,CAUhD,OAAQ,UAVwC,CAWhD,SAAY,CACXH,QAAS,iDADE,CAEXC,WAAY,CAAA,CAFD,CAXoC,CAAjD,CAiBAL,MAAAC,UAAAC,KAAA,OAAAI,OAAAI,KAAA,CAA6CV,KAAAW,KAAAC,MAAA,CAAiBZ,KAAAC,UAAAC,KAAjB,CA3EsF;",
"sources":["node_modules/prismjs/components/prism-scss.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$prismjs$components$prism_scss\"] = function(global,process,require,module,exports,shadow$shims) {\nPrism.languages.scss = Prism.languages.extend('css', {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|\\/\\/.*)/,\n\t\tlookbehind: true\n\t},\n\t'atrule': {\n\t\tpattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t// url, compassified\n\t'url': /(?:[-a-z]+-)*url(?=\\()/i,\n\t// CSS selector regex is not appropriate for Sass\n\t// since there can be lot more things (var, @ directive, nesting..)\n\t// a selector must start at the end of a property or after a brace (end of other rules or nesting)\n\t// it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n\t// the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n\t// can \"pass\" as a selector- e.g: proper#{$erty})\n\t// this one was hard to do, so please be careful if you edit this one :)\n\t'selector': {\n\t\t// Initial look-ahead is used to prevent matching of blank selectors\n\t\tpattern: /(?=\\S)[^@;\\{\\}\\(\\)]?([^@;\\{\\}\\(\\)]|&|#\\{\\$[-_\\w]+\\})+(?=\\s*\\{(\\}|\\s|[^\\}]+(:|\\{)[^\\}]+))/m,\n\t\tinside: {\n\t\t\t'parent': {\n\t\t\t\tpattern: /&/,\n\t\t\t\talias: 'important'\n\t\t\t},\n\t\t\t'placeholder': /%[-_\\w]+/,\n\t\t\t'variable': /\\$[-_\\w]+|#\\{\\$[-_\\w]+\\}/\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('scss', 'atrule', {\n\t'keyword': [\n\t\t/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,\n\t\t{\n\t\t\tpattern: /( +)(?:from|through)(?= )/,\n\t\t\tlookbehind: true\n\t\t}\n\t]\n});\n\nPrism.languages.scss.property = {\n\tpattern: /(?:[\\w-]|\\$[-_\\w]+|#\\{\\$[-_\\w]+\\})+(?=\\s*:)/i,\n\tinside: {\n\t\t'variable': /\\$[-_\\w]+|#\\{\\$[-_\\w]+\\}/\n\t}\n};\n\nPrism.languages.insertBefore('scss', 'important', {\n\t// var and interpolated vars\n\t'variable': /\\$[-_\\w]+|#\\{\\$[-_\\w]+\\}/\n});\n\nPrism.languages.insertBefore('scss', 'function', {\n\t'placeholder': {\n\t\tpattern: /%[-_\\w]+/,\n\t\talias: 'selector'\n\t},\n\t'statement': {\n\t\tpattern: /\\B!(?:default|optional)\\b/i,\n\t\talias: 'keyword'\n\t},\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'null': /\\bnull\\b/,\n\t'operator': {\n\t\tpattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n\t\tlookbehind: true\n\t}\n});\n\nPrism.languages.scss['atrule'].inside.rest = Prism.util.clone(Prism.languages.scss);\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Prism","languages","scss","extend","pattern","lookbehind","inside","alias","insertBefore","property","rest","util","clone"]
}
