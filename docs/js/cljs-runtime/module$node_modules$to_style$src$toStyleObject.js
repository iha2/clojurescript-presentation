shadow$provide.module$node_modules$to_style$src$toStyleObject=function(global,process,require,module,exports,shadow$shims){require("module$node_modules$to_style$src$prefixInfo");var cssPrefixFn=require("module$node_modules$to_style$src$cssPrefix"),HYPHENATE=require("module$node_modules$to_style$src$stringUtils$hyphenate"),CAMELIZE=require("module$node_modules$to_style$src$stringUtils$camelize"),HAS_OWN=require("module$node_modules$to_style$src$hasOwn"),IS_OBJECT=require("module$node_modules$to_style$src$isObject"),
IS_FUNCTION=require("module$node_modules$to_style$src$isFunction"),applyPrefix=function(target,property,value,normalizeFn){cssPrefixFn(property).forEach(function(p){target[normalizeFn?normalizeFn(p):p]=value})},toObject=function(str){str=(str||"").split(";");var result={};str.forEach(function(item){item=item.split(":");2==item.length&&(result[item[0].trim()]=item[1].trim())});return result},CONFIG={cssUnitless:require("module$node_modules$to_style$src$cssUnitless")},TO_STYLE_OBJECT=function(styles,
config,prepend,result){"string"==typeof styles&&(styles=toObject(styles));config=config||CONFIG;config.cssUnitless=config.cssUnitless||CONFIG.cssUnitless;result=result||{};var scope=config.scope||{},addUnits=null!=config.addUnits?config.addUnits:scope&&null!=scope.addUnits?scope.addUnits:!0,cssUnitless=(null!=config.cssUnitless?config.cssUnitless:scope?scope.cssUnitless:null)||{},cssUnit=(config.cssUnit||scope?scope.cssUnit:null)||"px",prefixProperties=config.prefixProperties||(scope?scope.prefixProperties:
null)||{},normalizeFn=config.camelize?CAMELIZE:HYPHENATE,processed,propName;for(propName in styles)if(HAS_OWN(styles,propName)){var propValue=styles[propName];var styleName$jscomp$0=HYPHENATE(prepend?prepend+propName:propName);var prefix=processed=!1;if(IS_FUNCTION(propValue)){var propType=propValue.call(scope||styles,propValue,propName,styleName$jscomp$0,styles);IS_OBJECT(propType)&&null!=propType.value?(propValue=propType.value,prefix=propType.prefix,styleName$jscomp$0=propType.name?HYPHENATE(propType.name):
styleName$jscomp$0):propValue=propType}propType=typeof propValue;var propIsNumber="number"==propType||"string"==propType&&""!=propValue&&1*propValue==propValue;if(null!=propValue&&null!=styleName$jscomp$0&&""!==styleName$jscomp$0){if(propIsNumber||"string"==propType)processed=!0;!processed&&null!=propValue.value&&propValue.prefix&&(processed=!0,prefix=propValue.prefix,propValue=propValue.value);if(processed){prefix=prefix||!!prefixProperties[styleName$jscomp$0];propIsNumber&&(propValue=!addUnits||
styleName$jscomp$0 in cssUnitless?propValue+"":propValue+cssUnit);"border"!=styleName$jscomp$0&&(styleName$jscomp$0.indexOf("border")||~styleName$jscomp$0.indexOf("radius")||~styleName$jscomp$0.indexOf("width"))||!propIsNumber||(styleName$jscomp$0+="-width");if(!styleName$jscomp$0.indexOf("border-radius-")&&(styleName$jscomp$0.replace(/border(-radius)(-(.*))/,function(str,radius,theRest){str={"-top":["-top-left","-top-right"],"-left":["-top-left","-bottom-left"],"-right":["-top-right","-bottom-right"],
"-bottom":["-bottom-left","-bottom-right"]};theRest in str?(styleName$jscomp$0=[],str[theRest].forEach(function(pos){styleName$jscomp$0.push("border"+pos+radius)})):styleName$jscomp$0="border"+theRest+radius}),Array.isArray(styleName$jscomp$0))){styleName$jscomp$0.forEach(function(styleName){prefix?applyPrefix(result,styleName,propValue,normalizeFn):result[normalizeFn(styleName)]=propValue});continue}prefix?applyPrefix(result,styleName$jscomp$0,propValue,normalizeFn):result[normalizeFn(styleName$jscomp$0)]=
propValue}else TO_STYLE_OBJECT(propValue,config,styleName$jscomp$0+"-",result)}}return result};module.exports=TO_STYLE_OBJECT}
//# sourceMappingURL=module$node_modules$to_style$src$toStyleObject.js.map
