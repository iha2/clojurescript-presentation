shadow$provide.module$node_modules$react_redux$lib$utils$Subscription=function(global,process,require,module,exports,shadow$shims){function createListenerCollection(){var current=[],next=[];return{clear:function(){current=next=null},notify:function(){for(var listeners=current=next,i=0;i<listeners.length;i++)listeners[i]()},get:function(){return next},subscribe:function(listener){var isSubscribed=!0;next===current&&(next=current.slice());next.push(listener);return function(){isSubscribed&&null!==current&&
(isSubscribed=!1,next===current&&(next=current.slice()),next.splice(next.indexOf(listener),1))}}}}exports.__esModule=!0;var nullListeners={notify:function(){}};global=function(){function Subscription(store,parentSub,onStateChange){if(!(this instanceof Subscription))throw new TypeError("Cannot call a class as a function");this.store=store;this.parentSub=parentSub;this.onStateChange=onStateChange;this.unsubscribe=null;this.listeners=nullListeners}Subscription.prototype.addNestedSub=function(listener){this.trySubscribe();
return this.listeners.subscribe(listener)};Subscription.prototype.notifyNestedSubs=function(){this.listeners.notify()};Subscription.prototype.isSubscribed=function(){return!!this.unsubscribe};Subscription.prototype.trySubscribe=function(){this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.onStateChange):this.store.subscribe(this.onStateChange),this.listeners=createListenerCollection())};Subscription.prototype.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),
this.unsubscribe=null,this.listeners.clear(),this.listeners=nullListeners)};return Subscription}();exports.default=global}
//# sourceMappingURL=module$node_modules$react_redux$lib$utils$Subscription.js.map
