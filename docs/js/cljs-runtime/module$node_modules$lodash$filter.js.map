{
"version":3,
"file":"module$node_modules$lodash$filter.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,kCAAA,CAAsD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IAC/GC,YAAcJ,OAAA,CAAQ,yCAAR,CADiG,CAE/GK,WAAaL,OAAA,CAAQ,wCAAR,CAFkG,CAG/GM,aAAeN,OAAA,CAAQ,0CAAR,CAHgG,CAI/GO,QAAUP,OAAA,CAAQ,oCAAR,CA4CdC,OAAAC,QAAA,CALAM,QAAe,CAACC,UAAD,CAAaC,SAAb,CAAwB,CAErC,MAAO,CADIH,OAAA,CAAQE,UAAR,CAAAE,CAAsBP,WAAtBO,CAAoCN,UACxC,EAAKI,UAAL,CAAiBH,YAAA,CAAaI,SAAb,CAAwB,CAAxB,CAAjB,CAF8B,CA3C4E;",
"sources":["node_modules/lodash/filter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$filter\"] = function(global,process,require,module,exports,shadow$shims) {\nvar arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","arrayFilter","baseFilter","baseIteratee","isArray","filter","collection","predicate","func"]
}
