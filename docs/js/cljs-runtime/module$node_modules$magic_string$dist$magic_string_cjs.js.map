{
"version":3,
"file":"module$node_modules$magic_string$dist$magic_string_cjs.js",
"lineCount":45,
"mappings":"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",
"sources":["node_modules/magic-string/dist/magic-string.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$magic_string$dist$magic_string_cjs\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nvar vlq = require('vlq');\n\nfunction Chunk ( start, end, content ) {\n\tthis.start = start;\n\tthis.end = end;\n\tthis.original = content;\n\n\tthis.intro = '';\n\tthis.outro = '';\n\n\tthis.content = content;\n\tthis.storeName = false;\n\tthis.edited = false;\n\n\t// we make these non-enumerable, for sanity while debugging\n\tObject.defineProperties( this, {\n\t\tprevious: { writable: true, value: null },\n\t\tnext: { writable: true, value: null }\n\t});\n}\n\nChunk.prototype = {\n\tappendLeft: function appendLeft ( content ) {\n\t\tthis.outro += content;\n\t},\n\n\tappendRight: function appendRight ( content ) {\n\t\tthis.intro = this.intro + content;\n\t},\n\n\tclone: function clone () {\n\t\tvar chunk = new Chunk( this.start, this.end, this.original );\n\n\t\tchunk.intro = this.intro;\n\t\tchunk.outro = this.outro;\n\t\tchunk.content = this.content;\n\t\tchunk.storeName = this.storeName;\n\t\tchunk.edited = this.edited;\n\n\t\treturn chunk;\n\t},\n\n\tcontains: function contains ( index ) {\n\t\treturn this.start < index && index < this.end;\n\t},\n\n\teachNext: function eachNext ( fn ) {\n\t\tvar chunk = this;\n\t\twhile ( chunk ) {\n\t\t\tfn( chunk );\n\t\t\tchunk = chunk.next;\n\t\t}\n\t},\n\n\teachPrevious: function eachPrevious ( fn ) {\n\t\tvar chunk = this;\n\t\twhile ( chunk ) {\n\t\t\tfn( chunk );\n\t\t\tchunk = chunk.previous;\n\t\t}\n\t},\n\n\tedit: function edit ( content, storeName, contentOnly ) {\n\t\tthis.content = content;\n\t\tif ( !contentOnly ) {\n\t\t\tthis.intro = '';\n\t\t\tthis.outro = '';\n\t\t}\n\t\tthis.storeName = storeName;\n\n\t\tthis.edited = true;\n\n\t\treturn this;\n\t},\n\n\tprependLeft: function prependLeft ( content ) {\n\t\tthis.outro = content + this.outro;\n\t},\n\n\tprependRight: function prependRight ( content ) {\n\t\tthis.intro = content + this.intro;\n\t},\n\n\tsplit: function split ( index ) {\n\t\tvar sliceIndex = index - this.start;\n\n\t\tvar originalBefore = this.original.slice( 0, sliceIndex );\n\t\tvar originalAfter = this.original.slice( sliceIndex );\n\n\t\tthis.original = originalBefore;\n\n\t\tvar newChunk = new Chunk( index, this.end, originalAfter );\n\t\tnewChunk.outro = this.outro;\n\t\tthis.outro = '';\n\n\t\tthis.end = index;\n\n\t\tif ( this.edited ) {\n\t\t\t// TODO is this block necessary?...\n\t\t\tnewChunk.edit( '', false );\n\t\t\tthis.content = '';\n\t\t} else {\n\t\t\tthis.content = originalBefore;\n\t\t}\n\n\t\tnewChunk.next = this.next;\n\t\tif ( newChunk.next ) { newChunk.next.previous = newChunk; }\n\t\tnewChunk.previous = this;\n\t\tthis.next = newChunk;\n\n\t\treturn newChunk;\n\t},\n\n\ttoString: function toString () {\n\t\treturn this.intro + this.content + this.outro;\n\t},\n\n\ttrimEnd: function trimEnd ( rx ) {\n\t\tthis.outro = this.outro.replace( rx, '' );\n\t\tif ( this.outro.length ) { return true; }\n\n\t\tvar trimmed = this.content.replace( rx, '' );\n\n\t\tif ( trimmed.length ) {\n\t\t\tif ( trimmed !== this.content ) {\n\t\t\t\tthis.split( this.start + trimmed.length ).edit( '', false );\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit( '', false );\n\n\t\t\tthis.intro = this.intro.replace( rx, '' );\n\t\t\tif ( this.intro.length ) { return true; }\n\t\t}\n\t},\n\n\ttrimStart: function trimStart ( rx ) {\n\t\tthis.intro = this.intro.replace( rx, '' );\n\t\tif ( this.intro.length ) { return true; }\n\n\t\tvar trimmed = this.content.replace( rx, '' );\n\n\t\tif ( trimmed.length ) {\n\t\t\tif ( trimmed !== this.content ) {\n\t\t\t\tthis.split( this.end - trimmed.length );\n\t\t\t\tthis.edit( '', false );\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit( '', false );\n\n\t\t\tthis.outro = this.outro.replace( rx, '' );\n\t\t\tif ( this.outro.length ) { return true; }\n\t\t}\n\t}\n};\n\nvar _btoa;\n\nif ( typeof window !== 'undefined' && typeof window.btoa === 'function' ) {\n\t_btoa = window.btoa;\n} else if ( typeof Buffer === 'function' ) {\n\t_btoa = function (str) { return new Buffer( str ).toString( 'base64' ); };\n} else {\n\t_btoa = function () {\n\t\tthrow new Error( 'Unsupported environment: `window.btoa` or `Buffer` should be supported.' );\n\t};\n}\n\nvar btoa = _btoa;\n\nfunction SourceMap ( properties ) {\n\tthis.version = 3;\n\n\tthis.file           = properties.file;\n\tthis.sources        = properties.sources;\n\tthis.sourcesContent = properties.sourcesContent;\n\tthis.names          = properties.names;\n\tthis.mappings       = properties.mappings;\n}\n\nSourceMap.prototype = {\n\ttoString: function toString () {\n\t\treturn JSON.stringify( this );\n\t},\n\n\ttoUrl: function toUrl () {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa( this.toString() );\n\t}\n};\n\nfunction guessIndent ( code ) {\n\tvar lines = code.split( '\\n' );\n\n\tvar tabbed = lines.filter( function (line) { return /^\\t+/.test( line ); } );\n\tvar spaced = lines.filter( function (line) { return /^ {2,}/.test( line ); } );\n\n\tif ( tabbed.length === 0 && spaced.length === 0 ) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif ( tabbed.length >= spaced.length ) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tvar min = spaced.reduce( function ( previous, current ) {\n\t\tvar numSpaces = /^ +/.exec( current )[0].length;\n\t\treturn Math.min( numSpaces, previous );\n\t}, Infinity );\n\n\treturn new Array( min + 1 ).join( ' ' );\n}\n\nfunction getRelativePath ( from, to ) {\n\tvar fromParts = from.split( /[\\/\\\\]/ );\n\tvar toParts = to.split( /[\\/\\\\]/ );\n\n\tfromParts.pop(); // get dirname\n\n\twhile ( fromParts[0] === toParts[0] ) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif ( fromParts.length ) {\n\t\tvar i = fromParts.length;\n\t\twhile ( i-- ) { fromParts[i] = '..'; }\n\t}\n\n\treturn fromParts.concat( toParts ).join( '/' );\n}\n\nvar toString = Object.prototype.toString;\n\nfunction isObject ( thing ) {\n\treturn toString.call( thing ) === '[object Object]';\n}\n\nfunction getLocator ( source ) {\n\tvar originalLines = source.split( '\\n' );\n\n\tvar start = 0;\n\tvar lineRanges = originalLines.map( function ( line, i ) {\n\t\tvar end = start + line.length + 1;\n\t\tvar range = { start: start, end: end, line: i };\n\n\t\tstart = end;\n\t\treturn range;\n\t});\n\n\tvar i = 0;\n\n\tfunction rangeContains ( range, index ) {\n\t\treturn range.start <= index && index < range.end;\n\t}\n\n\tfunction getLocation ( range, index ) {\n\t\treturn { line: range.line, column: index - range.start };\n\t}\n\n\treturn function locate ( index ) {\n\t\tvar range = lineRanges[i];\n\n\t\tvar d = index >= range.end ? 1 : -1;\n\n\t\twhile ( range ) {\n\t\t\tif ( rangeContains( range, index ) ) { return getLocation( range, index ); }\n\n\t\t\ti += d;\n\t\t\trange = lineRanges[i];\n\t\t}\n\t};\n}\n\nfunction Mappings ( hires ) {\n\tvar this$1 = this;\n\n\tvar offsets = {\n\t\tgeneratedCodeColumn: 0,\n\t\tsourceIndex: 0,\n\t\tsourceCodeLine: 0,\n\t\tsourceCodeColumn: 0,\n\t\tsourceCodeName: 0\n\t};\n\n\tvar generatedCodeLine = 0;\n\tvar generatedCodeColumn = 0;\n\n\tthis.raw = [];\n\tvar rawSegments = this.raw[ generatedCodeLine ] = [];\n\n\tvar pending = null;\n\n\tthis.addEdit = function ( sourceIndex, content, original, loc, nameIndex ) {\n\t\tif ( content.length ) {\n\t\t\trawSegments.push([\n\t\t\t\tgeneratedCodeColumn,\n\t\t\t\tsourceIndex,\n\t\t\t\tloc.line,\n\t\t\t\tloc.column,\n\t\t\t\tnameIndex ]);\n\t\t} else if ( pending ) {\n\t\t\trawSegments.push( pending );\n\t\t}\n\n\t\tthis$1.advance( content );\n\t\tpending = null;\n\t};\n\n\tthis.addUneditedChunk = function ( sourceIndex, chunk, original, loc, sourcemapLocations ) {\n\t\tvar originalCharIndex = chunk.start;\n\t\tvar first = true;\n\n\t\twhile ( originalCharIndex < chunk.end ) {\n\t\t\tif ( hires || first || sourcemapLocations[ originalCharIndex ] ) {\n\t\t\t\trawSegments.push([\n\t\t\t\t\tgeneratedCodeColumn,\n\t\t\t\t\tsourceIndex,\n\t\t\t\t\tloc.line,\n\t\t\t\t\tloc.column,\n\t\t\t\t\t-1\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\tif ( original[ originalCharIndex ] === '\\n' ) {\n\t\t\t\tloc.line += 1;\n\t\t\t\tloc.column = 0;\n\t\t\t\tgeneratedCodeLine += 1;\n\t\t\t\tthis$1.raw[ generatedCodeLine ] = rawSegments = [];\n\t\t\t\tgeneratedCodeColumn = 0;\n\t\t\t} else {\n\t\t\t\tloc.column += 1;\n\t\t\t\tgeneratedCodeColumn += 1;\n\t\t\t}\n\n\t\t\toriginalCharIndex += 1;\n\t\t\tfirst = false;\n\t\t}\n\n\t\tpending = [\n\t\t\tgeneratedCodeColumn,\n\t\t\tsourceIndex,\n\t\t\tloc.line,\n\t\t\tloc.column,\n\t\t\t-1 ];\n\t};\n\n\tthis.advance = function (str) {\n\t\tif ( !str ) { return; }\n\n\t\tvar lines = str.split( '\\n' );\n\t\tvar lastLine = lines.pop();\n\n\t\tif ( lines.length ) {\n\t\t\tgeneratedCodeLine += lines.length;\n\t\t\tthis$1.raw[ generatedCodeLine ] = rawSegments = [];\n\t\t\tgeneratedCodeColumn = lastLine.length;\n\t\t} else {\n\t\t\tgeneratedCodeColumn += lastLine.length;\n\t\t}\n\t};\n\n\tthis.encode = function () {\n\t\treturn this$1.raw.map( function (segments) {\n\t\t\tvar generatedCodeColumn = 0;\n\n\t\t\treturn segments.map( function (segment) {\n\t\t\t\tvar arr = [\n\t\t\t\t\tsegment[0] - generatedCodeColumn,\n\t\t\t\t\tsegment[1] - offsets.sourceIndex,\n\t\t\t\t\tsegment[2] - offsets.sourceCodeLine,\n\t\t\t\t\tsegment[3] - offsets.sourceCodeColumn\n\t\t\t\t];\n\n\t\t\t\tgeneratedCodeColumn = segment[0];\n\t\t\t\toffsets.sourceIndex = segment[1];\n\t\t\t\toffsets.sourceCodeLine = segment[2];\n\t\t\t\toffsets.sourceCodeColumn = segment[3];\n\n\t\t\t\tif ( ~segment[4] ) {\n\t\t\t\t\tarr.push( segment[4] - offsets.sourceCodeName );\n\t\t\t\t\toffsets.sourceCodeName = segment[4];\n\t\t\t\t}\n\n\t\t\t\treturn vlq.encode( arr );\n\t\t\t}).join( ',' );\n\t\t}).join( ';' );\n\t};\n}\n\nvar Stats = function Stats () {\n\tObject.defineProperties( this, {\n\t\tstartTimes: { value: {} }\n\t});\n};\n\nStats.prototype.time = function time ( label ) {\n\tthis.startTimes[ label ] = process.hrtime();\n};\n\nStats.prototype.timeEnd = function timeEnd ( label ) {\n\tvar elapsed = process.hrtime( this.startTimes[ label ] );\n\n\tif ( !this[ label ] ) { this[ label ] = 0; }\n\tthis[ label ] += elapsed[0] * 1e3 + elapsed[1] * 1e-6;\n};\n\nvar warned = {\n\tinsertLeft: false,\n\tinsertRight: false,\n\tstoreName: false\n};\n\nfunction MagicString$1 ( string, options ) {\n\tif ( options === void 0 ) options = {};\n\n\tvar chunk = new Chunk( 0, string.length, string );\n\n\tObject.defineProperties( this, {\n\t\toriginal:              { writable: true, value: string },\n\t\toutro:                 { writable: true, value: '' },\n\t\tintro:                 { writable: true, value: '' },\n\t\tfirstChunk:            { writable: true, value: chunk },\n\t\tlastChunk:             { writable: true, value: chunk },\n\t\tlastSearchedChunk:     { writable: true, value: chunk },\n\t\tbyStart:               { writable: true, value: {} },\n\t\tbyEnd:                 { writable: true, value: {} },\n\t\tfilename:              { writable: true, value: options.filename },\n\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\tsourcemapLocations:    { writable: true, value: {} },\n\t\tstoredNames:           { writable: true, value: {} },\n\t\tindentStr:             { writable: true, value: guessIndent( string ) }\n\t});\n\n\tthis.byStart[ 0 ] = chunk;\n\tthis.byEnd[ string.length ] = chunk;\n}\n\nMagicString$1.prototype = {\n\taddSourcemapLocation: function addSourcemapLocation ( char ) {\n\t\tthis.sourcemapLocations[ char ] = true;\n\t},\n\n\tappend: function append ( content ) {\n\t\tif ( typeof content !== 'string' ) { throw new TypeError( 'outro content must be a string' ); }\n\n\t\tthis.outro += content;\n\t\treturn this;\n\t},\n\n\tappendLeft: function appendLeft ( index, content ) {\n\t\tif ( typeof content !== 'string' ) { throw new TypeError( 'inserted content must be a string' ); }\n\n\t\tthis._split( index );\n\n\t\tvar chunk = this.byEnd[ index ];\n\n\t\tif ( chunk ) {\n\t\t\tchunk.appendLeft( content );\n\t\t} else {\n\t\t\tthis.intro += content;\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tappendRight: function appendRight ( index, content ) {\n\t\tif ( typeof content !== 'string' ) { throw new TypeError( 'inserted content must be a string' ); }\n\n\t\tthis._split( index );\n\n\t\tvar chunk = this.byStart[ index ];\n\n\t\tif ( chunk ) {\n\t\t\tchunk.appendRight( content );\n\t\t} else {\n\t\t\tthis.outro += content;\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function clone () {\n\t\tvar cloned = new MagicString$1( this.original, { filename: this.filename });\n\n\t\tvar originalChunk = this.firstChunk;\n\t\tvar clonedChunk = cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone();\n\n\t\twhile ( originalChunk ) {\n\t\t\tcloned.byStart[ clonedChunk.start ] = clonedChunk;\n\t\t\tcloned.byEnd[ clonedChunk.end ] = clonedChunk;\n\n\t\t\tvar nextOriginalChunk = originalChunk.next;\n\t\t\tvar nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\t\tif ( nextClonedChunk ) {\n\t\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\t\tclonedChunk = nextClonedChunk;\n\t\t\t}\n\n\t\t\toriginalChunk = nextOriginalChunk;\n\t\t}\n\n\t\tcloned.lastChunk = clonedChunk;\n\n\t\tif ( this.indentExclusionRanges ) {\n\t\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\n\t\t}\n\n\t\tObject.keys( this.sourcemapLocations ).forEach( function (loc) {\n\t\t\tcloned.sourcemapLocations[ loc ] = true;\n\t\t});\n\n\t\treturn cloned;\n\t},\n\n\tgenerateMap: function generateMap ( options ) {\n\t\tvar this$1 = this;\n\n\t\toptions = options || {};\n\n\t\tvar sourceIndex = 0;\n\t\tvar names = Object.keys( this.storedNames );\n\t\tvar mappings = new Mappings( options.hires );\n\n\t\tvar locate = getLocator( this.original );\n\n\t\tif ( this.intro ) {\n\t\t\tmappings.advance( this.intro );\n\t\t}\n\n\t\tthis.firstChunk.eachNext( function (chunk) {\n\t\t\tvar loc = locate( chunk.start );\n\n\t\t\tif ( chunk.intro.length ) { mappings.advance( chunk.intro ); }\n\n\t\t\tif ( chunk.edited ) {\n\t\t\t\tmappings.addEdit( sourceIndex, chunk.content, chunk.original, loc, chunk.storeName ? names.indexOf( chunk.original ) : -1 );\n\t\t\t} else {\n\t\t\t\tmappings.addUneditedChunk( sourceIndex, chunk, this$1.original, loc, this$1.sourcemapLocations );\n\t\t\t}\n\n\t\t\tif ( chunk.outro.length ) { mappings.advance( chunk.outro ); }\n\t\t});\n\n\t\tvar map = new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: [ options.source ? getRelativePath( options.file || '', options.source ) : null ],\n\t\t\tsourcesContent: options.includeContent ? [ this.original ] : [ null ],\n\t\t\tnames: names,\n\t\t\tmappings: mappings.encode()\n\t\t});\n\t\treturn map;\n\t},\n\n\tgetIndentString: function getIndentString () {\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t},\n\n\tindent: function indent ( indentStr, options ) {\n\t\tvar this$1 = this;\n\n\t\tvar pattern = /^[^\\r\\n]/gm;\n\n\t\tif ( isObject( indentStr ) ) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tindentStr = indentStr !== undefined ? indentStr : ( this.indentStr || '\\t' );\n\n\t\tif ( indentStr === '' ) { return this; } // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tvar isExcluded = {};\n\n\t\tif ( options.exclude ) {\n\t\t\tvar exclusions = typeof options.exclude[0] === 'number' ? [ options.exclude ] : options.exclude;\n\t\t\texclusions.forEach( function (exclusion) {\n\t\t\t\tfor ( var i = exclusion[0]; i < exclusion[1]; i += 1 ) {\n\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvar shouldIndentNextCharacter = options.indentStart !== false;\n\t\tvar replacer = function (match) {\n\t\t\tif ( shouldIndentNextCharacter ) { return (\"\" + indentStr + match); }\n\t\t\tshouldIndentNextCharacter = true;\n\t\t\treturn match;\n\t\t};\n\n\t\tthis.intro = this.intro.replace( pattern, replacer );\n\n\t\tvar charIndex = 0;\n\n\t\tvar chunk = this.firstChunk;\n\n\t\twhile ( chunk ) {\n\t\t\tvar end = chunk.end;\n\n\t\t\tif ( chunk.edited ) {\n\t\t\t\tif ( !isExcluded[ charIndex ] ) {\n\t\t\t\t\tchunk.content = chunk.content.replace( pattern, replacer );\n\n\t\t\t\t\tif ( chunk.content.length ) {\n\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[ chunk.content.length - 1 ] === '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcharIndex = chunk.start;\n\n\t\t\t\twhile ( charIndex < end ) {\n\t\t\t\t\tif ( !isExcluded[ charIndex ] ) {\n\t\t\t\t\t\tvar char = this$1.original[ charIndex ];\n\n\t\t\t\t\t\tif ( char === '\\n' ) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t\t} else if ( char !== '\\r' && shouldIndentNextCharacter ) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\t\tif ( charIndex === chunk.start ) {\n\t\t\t\t\t\t\t\tchunk.prependRight( indentStr );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis$1._splitChunk( chunk, charIndex );\n\t\t\t\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t\t\t\t\tchunk.prependRight( indentStr );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcharIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcharIndex = chunk.end;\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tthis.outro = this.outro.replace( pattern, replacer );\n\n\t\treturn this;\n\t},\n\n\tinsert: function insert () {\n\t\tthrow new Error( 'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)' );\n\t},\n\n\tinsertLeft: function insertLeft ( index, content ) {\n\t\tif ( !warned.insertLeft ) {\n\t\t\tconsole.warn( 'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead' ); // eslint-disable-line no-console\n\t\t\twarned.insertLeft = true;\n\t\t}\n\n\t\treturn this.appendLeft( index, content );\n\t},\n\n\tinsertRight: function insertRight ( index, content ) {\n\t\tif ( !warned.insertRight ) {\n\t\t\tconsole.warn( 'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead' ); // eslint-disable-line no-console\n\t\t\twarned.insertRight = true;\n\t\t}\n\n\t\treturn this.prependRight( index, content );\n\t},\n\n\tmove: function move ( start, end, index ) {\n\t\tif ( index >= start && index <= end ) { throw new Error( 'Cannot move a selection inside itself' ); }\n\n\t\tthis._split( start );\n\t\tthis._split( end );\n\t\tthis._split( index );\n\n\t\tvar first = this.byStart[ start ];\n\t\tvar last = this.byEnd[ end ];\n\n\t\tvar oldLeft = first.previous;\n\t\tvar oldRight = last.next;\n\n\t\tvar newRight = this.byStart[ index ];\n\t\tif ( !newRight && last === this.lastChunk ) { return this; }\n\t\tvar newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\t\tif ( oldLeft ) { oldLeft.next = oldRight; }\n\t\tif ( oldRight ) { oldRight.previous = oldLeft; }\n\n\t\tif ( newLeft ) { newLeft.next = first; }\n\t\tif ( newRight ) { newRight.previous = last; }\n\n\t\tif ( !first.previous ) { this.firstChunk = last.next; }\n\t\tif ( !last.next ) {\n\t\t\tthis.lastChunk = first.previous;\n\t\t\tthis.lastChunk.next = null;\n\t\t}\n\n\t\tfirst.previous = newLeft;\n\t\tlast.next = newRight || null;\n\n\t\tif ( !newLeft ) { this.firstChunk = first; }\n\t\tif ( !newRight ) { this.lastChunk = last; }\n\n\t\treturn this;\n\t},\n\n\toverwrite: function overwrite ( start, end, content, options ) {\n\t\tvar this$1 = this;\n\n\t\tif ( typeof content !== 'string' ) { throw new TypeError( 'replacement content must be a string' ); }\n\n\t\twhile ( start < 0 ) { start += this$1.original.length; }\n\t\twhile ( end < 0 ) { end += this$1.original.length; }\n\n\t\tif ( end > this.original.length ) { throw new Error( 'end is out of bounds' ); }\n\t\tif ( start === end ) { throw new Error( 'Cannot overwrite a zero-length range \u2013 use appendLeft or prependRight instead' ); }\n\n\t\tthis._split( start );\n\t\tthis._split( end );\n\n\t\tif ( options === true ) {\n\t\t\tif ( !warned.storeName ) {\n\t\t\t\tconsole.warn( 'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string' ); // eslint-disable-line no-console\n\t\t\t\twarned.storeName = true;\n\t\t\t}\n\n\t\t\toptions = { storeName: true };\n\t\t}\n\t\tvar storeName = options !== undefined ? options.storeName : false;\n\t\tvar contentOnly = options !== undefined ? options.contentOnly : false;\n\n\t\tif ( storeName ) {\n\t\t\tvar original = this.original.slice( start, end );\n\t\t\tthis.storedNames[ original ] = true;\n\t\t}\n\n\t\tvar first = this.byStart[ start ];\n\t\tvar last = this.byEnd[ end ];\n\n\t\tif ( first ) {\n\t\t\tif ( end > first.end && first.next !== this.byStart[ first.end ] ) {\n\t\t\t\tthrow new Error( 'Cannot overwrite across a split point' );\n\t\t\t}\n\n\t\t\tfirst.edit( content, storeName, contentOnly );\n\n\t\t\tif ( first !== last ) {\n\t\t\t\tvar chunk = first.next;\n\t\t\t\twhile ( chunk !== last ) {\n\t\t\t\t\tchunk.edit( '', false );\n\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t}\n\n\t\t\t\tchunk.edit( '', false );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\t// must be inserting at the end\n\t\t\tvar newChunk = new Chunk( start, end, '' ).edit( content, storeName );\n\n\t\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\t\tlast.next = newChunk;\n\t\t\tnewChunk.previous = last;\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tprepend: function prepend ( content ) {\n\t\tif ( typeof content !== 'string' ) { throw new TypeError( 'outro content must be a string' ); }\n\n\t\tthis.intro = content + this.intro;\n\t\treturn this;\n\t},\n\n\tprependLeft: function prependLeft ( index, content ) {\n\t\tif ( typeof content !== 'string' ) { throw new TypeError( 'inserted content must be a string' ); }\n\n\t\tthis._split( index );\n\n\t\tvar chunk = this.byEnd[ index ];\n\n\t\tif ( chunk ) {\n\t\t\tchunk.prependLeft( content );\n\t\t} else {\n\t\t\tthis.intro = content + this.intro;\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tprependRight: function prependRight ( index, content ) {\n\t\tif ( typeof content !== 'string' ) { throw new TypeError( 'inserted content must be a string' ); }\n\n\t\tthis._split( index );\n\n\t\tvar chunk = this.byStart[ index ];\n\n\t\tif ( chunk ) {\n\t\t\tchunk.prependRight( content );\n\t\t} else {\n\t\t\tthis.outro = content + this.outro;\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremove: function remove ( start, end ) {\n\t\tvar this$1 = this;\n\n\t\twhile ( start < 0 ) { start += this$1.original.length; }\n\t\twhile ( end < 0 ) { end += this$1.original.length; }\n\n\t\tif ( start === end ) { return this; }\n\n\t\tif ( start < 0 || end > this.original.length ) { throw new Error( 'Character is out of bounds' ); }\n\t\tif ( start > end ) { throw new Error( 'end must be greater than start' ); }\n\n\t\tthis._split( start );\n\t\tthis._split( end );\n\n\t\tvar chunk = this.byStart[ start ];\n\n\t\twhile ( chunk ) {\n\t\t\tchunk.intro = '';\n\t\t\tchunk.outro = '';\n\t\t\tchunk.edit( '' );\n\n\t\t\tchunk = end > chunk.end ? this$1.byStart[ chunk.end ] : null;\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tslice: function slice ( start, end ) {\n\t\tvar this$1 = this;\n\t\tif ( start === void 0 ) start = 0;\n\t\tif ( end === void 0 ) end = this.original.length;\n\n\t\twhile ( start < 0 ) { start += this$1.original.length; }\n\t\twhile ( end < 0 ) { end += this$1.original.length; }\n\n\t\tvar result = '';\n\n\t\t// find start chunk\n\t\tvar chunk = this.firstChunk;\n\t\twhile ( chunk && ( chunk.start > start || chunk.end <= start ) ) {\n\n\t\t\t// found end chunk before start\n\t\t\tif ( chunk.start < end && chunk.end >= end ) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tif ( chunk && chunk.edited && chunk.start !== start ) { throw new Error((\"Cannot use replaced character \" + start + \" as slice start anchor.\")); }\n\n\t\tvar startChunk = chunk;\n\t\twhile ( chunk ) {\n\t\t\tif ( chunk.intro && ( startChunk !== chunk || chunk.start === start ) ) {\n\t\t\t\tresult += chunk.intro;\n\t\t\t}\n\n\t\t\tvar containsEnd = chunk.start < end && chunk.end >= end;\n\t\t\tif ( containsEnd && chunk.edited && chunk.end !== end ) { throw new Error((\"Cannot use replaced character \" + end + \" as slice end anchor.\")); }\n\n\t\t\tvar sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\t\tvar sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\t\tresult += chunk.content.slice( sliceStart, sliceEnd );\n\n\t\t\tif ( chunk.outro && ( !containsEnd || chunk.end === end ) ) {\n\t\t\t\tresult += chunk.outro;\n\t\t\t}\n\n\t\t\tif ( containsEnd ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\t// TODO deprecate this? not really very useful\n\tsnip: function snip ( start, end ) {\n\t\tvar clone = this.clone();\n\t\tclone.remove( 0, start );\n\t\tclone.remove( end, clone.original.length );\n\n\t\treturn clone;\n\t},\n\n\t_split: function _split ( index ) {\n\t\tvar this$1 = this;\n\n\t\tif ( this.byStart[ index ] || this.byEnd[ index ] ) { return; }\n\n\t\tvar chunk = this.lastSearchedChunk;\n\t\tvar searchForward = index > chunk.end;\n\n\t\twhile ( true ) {\n\t\t\tif ( chunk.contains( index ) ) { return this$1._splitChunk( chunk, index ); }\n\n\t\t\tchunk = searchForward ?\n\t\t\t\tthis$1.byStart[ chunk.end ] :\n\t\t\t\tthis$1.byEnd[ chunk.start ];\n\t\t}\n\t},\n\n\t_splitChunk: function _splitChunk ( chunk, index ) {\n\t\tif ( chunk.edited && chunk.content.length ) { // zero-length edited chunks are a special case (overlapping replacements)\n\t\t\tvar loc = getLocator( this.original )( index );\n\t\t\tthrow new Error( (\"Cannot split a chunk that has already been edited (\" + (loc.line) + \":\" + (loc.column) + \" \u2013 \\\"\" + (chunk.original) + \"\\\")\") );\n\t\t}\n\n\t\tvar newChunk = chunk.split( index );\n\n\t\tthis.byEnd[ index ] = chunk;\n\t\tthis.byStart[ index ] = newChunk;\n\t\tthis.byEnd[ newChunk.end ] = newChunk;\n\n\t\tif ( chunk === this.lastChunk ) { this.lastChunk = newChunk; }\n\n\t\tthis.lastSearchedChunk = chunk;\n\t\treturn true;\n\t},\n\n\ttoString: function toString () {\n\t\tvar str = this.intro;\n\n\t\tvar chunk = this.firstChunk;\n\t\twhile ( chunk ) {\n\t\t\tstr += chunk.toString();\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn str + this.outro;\n\t},\n\n\ttrimLines: function trimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t},\n\n\ttrim: function trim ( charType ) {\n\t\treturn this.trimStart( charType ).trimEnd( charType );\n\t},\n\n\ttrimEnd: function trimEnd ( charType ) {\n\t\tvar this$1 = this;\n\n\t\tvar rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\n\t\tthis.outro = this.outro.replace( rx, '' );\n\t\tif ( this.outro.length ) { return this; }\n\n\t\tvar chunk = this.lastChunk;\n\n\t\tdo {\n\t\t\tvar end = chunk.end;\n\t\t\tvar aborted = chunk.trimEnd( rx );\n\n\t\t\t// if chunk was trimmed, we have a new lastChunk\n\t\t\tif ( chunk.end !== end ) {\n\t\t\t\tif ( this$1.lastChunk === chunk ) {\n\t\t\t\t\tthis$1.lastChunk = chunk.next;\n\t\t\t\t}\n\n\t\t\t\tthis$1.byEnd[ chunk.end ] = chunk;\n\t\t\t\tthis$1.byStart[ chunk.next.start ] = chunk.next;\n\t\t\t\tthis$1.byEnd[ chunk.next.end ] = chunk.next;\n\t\t\t}\n\n\t\t\tif ( aborted ) { return this$1; }\n\t\t\tchunk = chunk.previous;\n\t\t} while ( chunk );\n\n\t\treturn this;\n\t},\n\n\ttrimStart: function trimStart ( charType ) {\n\t\tvar this$1 = this;\n\n\t\tvar rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\n\t\tthis.intro = this.intro.replace( rx, '' );\n\t\tif ( this.intro.length ) { return this; }\n\n\t\tvar chunk = this.firstChunk;\n\n\t\tdo {\n\t\t\tvar end = chunk.end;\n\t\t\tvar aborted = chunk.trimStart( rx );\n\n\t\t\tif ( chunk.end !== end ) {\n\t\t\t\t// special case...\n\t\t\t\tif ( chunk === this$1.lastChunk ) { this$1.lastChunk = chunk.next; }\n\n\t\t\t\tthis$1.byEnd[ chunk.end ] = chunk;\n\t\t\t\tthis$1.byStart[ chunk.next.start ] = chunk.next;\n\t\t\t\tthis$1.byEnd[ chunk.next.end ] = chunk.next;\n\t\t\t}\n\n\t\t\tif ( aborted ) { return this$1; }\n\t\t\tchunk = chunk.next;\n\t\t} while ( chunk );\n\n\t\treturn this;\n\t}\n};\n\nvar hasOwnProp = Object.prototype.hasOwnProperty;\n\nfunction Bundle ( options ) {\n\tif ( options === void 0 ) options = {};\n\n\tthis.intro = options.intro || '';\n\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\n\tthis.sources = [];\n\n\tthis.uniqueSources = [];\n\tthis.uniqueSourceIndexByFilename = {};\n}\n\nBundle.prototype = {\n\taddSource: function addSource ( source ) {\n\t\tif ( source instanceof MagicString$1 ) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator\n\t\t\t});\n\t\t}\n\n\t\tif ( !isObject( source ) || !source.content ) {\n\t\t\tthrow new Error( 'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`' );\n\t\t}\n\n\t\t[ 'filename', 'indentExclusionRanges', 'separator' ].forEach( function (option) {\n\t\t\tif ( !hasOwnProp.call( source, option ) ) { source[ option ] = source.content[ option ]; }\n\t\t});\n\n\t\tif ( source.separator === undefined ) { // TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif ( source.filename ) {\n\t\t\tif ( !hasOwnProp.call( this.uniqueSourceIndexByFilename, source.filename ) ) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[ source.filename ] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tvar uniqueSource = this.uniqueSources[ this.uniqueSourceIndexByFilename[ source.filename ] ];\n\t\t\t\tif ( source.content.original !== uniqueSource.content ) {\n\t\t\t\t\tthrow new Error( (\"Illegal source: same filename (\" + (source.filename) + \"), different contents\") );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push( source );\n\t\treturn this;\n\t},\n\n\tappend: function append ( str, options ) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString$1( str ),\n\t\t\tseparator: ( options && options.separator ) || ''\n\t\t});\n\n\t\treturn this;\n\t},\n\n\tclone: function clone () {\n\t\tvar bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\tseparator: this.separator\n\t\t});\n\n\t\tthis.sources.forEach( function (source) {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t},\n\n\tgenerateMap: function generateMap ( options ) {\n\t\tvar this$1 = this;\n\t\tif ( options === void 0 ) options = {};\n\n\t\tvar names = [];\n\t\tthis.sources.forEach( function (source) {\n\t\t\tObject.keys( source.content.storedNames ).forEach( function (name) {\n\t\t\t\tif ( !~names.indexOf( name ) ) { names.push( name ); }\n\t\t\t});\n\t\t});\n\n\t\tvar mappings = new Mappings( options.hires );\n\n\t\tif ( this.intro ) {\n\t\t\tmappings.advance( this.intro );\n\t\t}\n\n\t\tthis.sources.forEach( function ( source, i ) {\n\t\t\tif ( i > 0 ) {\n\t\t\t\tmappings.advance( this$1.separator );\n\t\t\t}\n\n\t\t\tvar sourceIndex = source.filename ? this$1.uniqueSourceIndexByFilename[ source.filename ] : -1;\n\t\t\tvar magicString = source.content;\n\t\t\tvar locate = getLocator( magicString.original );\n\n\t\t\tif ( magicString.intro ) {\n\t\t\t\tmappings.advance( magicString.intro );\n\t\t\t}\n\n\t\t\tmagicString.firstChunk.eachNext( function (chunk) {\n\t\t\t\tvar loc = locate( chunk.start );\n\n\t\t\t\tif ( chunk.intro.length ) { mappings.advance( chunk.intro ); }\n\n\t\t\t\tif ( source.filename ) {\n\t\t\t\t\tif ( chunk.edited ) {\n\t\t\t\t\t\tmappings.addEdit( sourceIndex, chunk.content, chunk.original, loc, chunk.storeName ? names.indexOf( chunk.original ) : -1 );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmappings.addUneditedChunk( sourceIndex, chunk, magicString.original, loc, magicString.sourcemapLocations );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tmappings.advance( chunk.content );\n\t\t\t\t}\n\n\t\t\t\tif ( chunk.outro.length ) { mappings.advance( chunk.outro ); }\n\t\t\t});\n\n\t\t\tif ( magicString.outro ) {\n\t\t\t\tmappings.advance( magicString.outro );\n\t\t\t}\n\t\t});\n\n\t\treturn new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: this.uniqueSources.map( function (source) {\n\t\t\t\treturn options.file ? getRelativePath( options.file, source.filename ) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map( function (source) {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames: names,\n\t\t\tmappings: mappings.encode()\n\t\t});\n\t},\n\n\tgetIndentString: function getIndentString () {\n\t\tvar indentStringCounts = {};\n\n\t\tthis.sources.forEach( function (source) {\n\t\t\tvar indentStr = source.content.indentStr;\n\n\t\t\tif ( indentStr === null ) { return; }\n\n\t\t\tif ( !indentStringCounts[ indentStr ] ) { indentStringCounts[ indentStr ] = 0; }\n\t\t\tindentStringCounts[ indentStr ] += 1;\n\t\t});\n\n\t\treturn ( Object.keys( indentStringCounts ).sort( function ( a, b ) {\n\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t})[0] ) || '\\t';\n\t},\n\n\tindent: function indent ( indentStr ) {\n\t\tvar this$1 = this;\n\n\t\tif ( !arguments.length ) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif ( indentStr === '' ) { return this; } // noop\n\n\t\tvar trailingNewline = !this.intro || this.intro.slice( -1 ) === '\\n';\n\n\t\tthis.sources.forEach( function ( source, i ) {\n\t\t\tvar separator = source.separator !== undefined ? source.separator : this$1.separator;\n\t\t\tvar indentStart = trailingNewline || ( i > 0 && /\\r?\\n$/.test( separator ) );\n\n\t\t\tsource.content.indent( indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart: indentStart//: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\t// TODO this is a very slow way to determine this\n\t\t\ttrailingNewline = source.content.toString().slice( 0, -1 ) === '\\n';\n\t\t});\n\n\t\tif ( this.intro ) {\n\t\t\tthis.intro = indentStr + this.intro.replace( /^[^\\n]/gm, function ( match, index ) {\n\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tprepend: function prepend ( str ) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t},\n\n\ttoString: function toString () {\n\t\tvar this$1 = this;\n\n\t\tvar body = this.sources.map( function ( source, i ) {\n\t\t\tvar separator = source.separator !== undefined ? source.separator : this$1.separator;\n\t\t\tvar str = ( i > 0 ? separator : '' ) + source.content.toString();\n\n\t\t\treturn str;\n\t\t}).join( '' );\n\n\t\treturn this.intro + body;\n\t},\n\n\ttrimLines: function trimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t},\n\n\ttrim: function trim ( charType ) {\n\t\treturn this.trimStart( charType ).trimEnd( charType );\n\t},\n\n\ttrimStart: function trimStart ( charType ) {\n\t\tvar this$1 = this;\n\n\t\tvar rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\t\tthis.intro = this.intro.replace( rx, '' );\n\n\t\tif ( !this.intro ) {\n\t\t\tvar source;\n\t\t\tvar i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this$1.sources[i];\n\n\t\t\t\tif ( !source ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsource.content.trimStart( charType );\n\t\t\t\ti += 1;\n\t\t\t} while ( source.content.toString() === '' ); // TODO faster way to determine non-empty source?\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttrimEnd: function trimEnd ( charType ) {\n\t\tvar this$1 = this;\n\n\t\tvar rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\n\t\tvar source;\n\t\tvar i = this.sources.length - 1;\n\n\t\tdo {\n\t\t\tsource = this$1.sources[i];\n\n\t\t\tif ( !source ) {\n\t\t\t\tthis$1.intro = this$1.intro.replace( rx, '' );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tsource.content.trimEnd( charType );\n\t\t\ti -= 1;\n\t\t} while ( source.content.toString() === '' ); // TODO faster way to determine non-empty source?\n\n\t\treturn this;\n\t}\n};\n\nMagicString$1.Bundle = Bundle;\nMagicString$1.default = MagicString$1; // work around TypeScript bug https://github.com/Rich-Harris/magic-string/pull/121\n\nmodule.exports = MagicString$1;\n//# sourceMappingURL=magic-string.cjs.js.map\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Chunk","start","end","content","original","outro","intro","edited","storeName","Object","defineProperties","previous","writable","value","next","SourceMap","properties","version","file","sources","sourcesContent","names","mappings","guessIndent","code","lines","split","tabbed","filter","line","test","spaced","length","min","reduce","current","numSpaces","exec","Math","Infinity","Array","join","getRelativePath","from","to","fromParts","toParts","pop","shift","i","concat","getLocator","source","lineRanges","originalLines","map","range","locate","index","d","column","Mappings","hires","this$1","generatedCodeLine","generatedCodeColumn","raw","rawSegments","pending","addEdit","this.addEdit","sourceIndex","loc","nameIndex","push","advance","addUneditedChunk","this.addUneditedChunk","chunk","sourcemapLocations","originalCharIndex","first","this.advance","str","lastLine","encode","this.encode","segments","segment","arr","sourceCodeLine","sourceCodeColumn","sourceCodeName","vlq","MagicString$1","string","options","firstChunk","lastChunk","lastSearchedChunk","byStart","byEnd","filename","indentExclusionRanges","storedNames","indentStr","Bundle","separator","undefined","uniqueSources","uniqueSourceIndexByFilename","prototype","appendLeft","appendRight","clone","contains","eachNext","fn","eachPrevious","edit","contentOnly","prependLeft","prependRight","sliceIndex","originalBefore","slice","originalAfter","newChunk","toString","trimEnd","rx","replace","trimmed","trimStart","btoa","_btoa","window","Buffer","Error","JSON","stringify","toUrl","addSourcemapLocation","char","append","TypeError","_split","cloned","originalChunk","clonedChunk","nextClonedChunk","nextOriginalChunk","keys","forEach","generateMap","indexOf","includeContent","getIndentString","indent","pattern","call","isExcluded","exclude","exclusions","exclusion","shouldIndentNextCharacter","indentStart","replacer","match","charIndex","_splitChunk","insert","insertLeft","console","warn","insertRight","move","last","oldLeft","oldRight","newRight","newLeft","overwrite","prepend","remove","result","startChunk","containsEnd","sliceStart","sliceEnd","snip","searchForward","trimLines","trim","charType","RegExp","aborted","hasOwnProp","hasOwnProperty","addSource","option","uniqueSource","bundle","name","magicString","indentStringCounts","sort","a","b","arguments","trailingNewline","body","default"]
}
