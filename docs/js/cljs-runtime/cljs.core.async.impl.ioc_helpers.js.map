{"version":3,"file":"cljs.core.async.impl.ioc_helpers.js","sources":["cljs/core/async/impl/ioc_helpers.cljs"],"mappings":"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","names":["cljs.core.async.impl.ioc-helpers/FN-IDX","cljs.core.async.impl.ioc-helpers/STATE-IDX","cljs.core.async.impl.ioc-helpers/VALUE-IDX","cljs.core.async.impl.ioc-helpers/BINDINGS-IDX","cljs.core.async.impl.ioc-helpers/EXCEPTION-FRAMES","cljs.core.async.impl.ioc-helpers/CURRENT-EXCEPTION","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/aset-object","arr","idx","o","cljs.core.async.impl.ioc-helpers/aget-object","cljs.core.async.impl.ioc-helpers/finished?","state-array","cljs.core/keyword-identical?","cljs.core.async.impl.ioc-helpers/fn-handler","f","js/cljs","js/cljs.core","js/cljs.core.async","js/cljs.core.async.impl","js/cljs.core.async.impl.ioc-helpers","js/cljs.core.async.impl.ioc-helpers.t_cljs$core$async$impl$ioc_helpers5376","cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers5376","_5378","meta5377","cljs.core/PROTOCOL_SENTINEL","this__4192__auto__","writer__4193__auto__","opt__4194__auto__","cljs.core/-write","cljs.core.async.impl.ioc-helpers/->t_cljs$core$async$impl$ioc_helpers5376","_","cljs.core.async.impl.ioc-helpers/run-state-machine","state","fexpr__5380","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","e5382","js/Object","ex","cljs.core.async.impl.ioc-helpers/take!","blk","c","temp__5455__auto__","cb","x","statearr-5385","statearr-5387","cljs.core/deref","cljs.core.async.impl.ioc-helpers/put!","val","ret-val","statearr-5390","statearr-5395","cljs.core.async.impl.ioc-helpers/return-chan","value","this__4203__auto__","k__4204__auto__","this__4205__auto__","k5402","else__4206__auto__","G__5413","cljs.core/Keyword","catch-block","catch-exception","finally-block","continue-block","prev","cljs.core.get.cljs$core$IFn$_invoke$arity$3","__extmap","this__4217__auto__","writer__4218__auto__","opts__4219__auto__","pr-pair__4220__auto__","keyval__4221__auto__","cljs.core/pr-sequential-writer","cljs.core/pr-writer","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/PersistentVector","G__5401","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4201__auto__","__meta","this__4198__auto__","__hash","this__4207__auto__","cljs.core/count","this__4199__auto__","h__4061__auto__","fexpr__5423","coll__4200__auto__","cljs.core/hash-unordered-coll","this5403","other5404","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","this__4212__auto__","k__4213__auto__","cljs.core/contains?","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","cljs.core/-with-meta","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core/not-empty","this__4210__auto__","k__4211__auto__","pred__5431","expr__5432","G__5438","G__5439","G__5443","G__5444","G__5449","G__5450","G__5456","G__5457","G__5458","G__5459","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","this__4215__auto__","cljs.core/seq","cljs/core.MapEntry","this__4202__auto__","this__4208__auto__","entry__4209__auto__","cljs.core/vector?","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","cljs.core/-conj","cljs.core.async.impl.ioc-helpers/ExceptionFrame","this__4240__auto__","cljs.core/List","writer__4241__auto__","G__5411","extmap__4236__auto__","G__5473","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","cljs.core/record?","cljs.core.async.impl.ioc-helpers/->ExceptionFrame","cljs.core.async.impl.ioc-helpers/map->ExceptionFrame","cljs.core.async.impl.ioc-helpers/add-exception-frame","statearr-5500","cljs.core.async.impl.ioc-helpers/process-exception","exception-frame","exception","and__3938__auto__","cljs.core/not","statearr-5503","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","statearr-5504","statearr-5505","statearr-5506","statearr-5507","js/Error"],"sourcesContent":["(ns cljs.core.async.impl.ioc-helpers\n  (:require [cljs.core.async.impl.protocols :as impl])\n  (:require-macros [cljs.core.async.impl.ioc-macros :as ioc]))\n\n(def ^:const FN-IDX 0)\n(def ^:const STATE-IDX 1)\n(def ^:const VALUE-IDX 2)\n(def ^:const BINDINGS-IDX 3)\n(def ^:const EXCEPTION-FRAMES 4)\n(def ^:const CURRENT-EXCEPTION 5)\n(def ^:const USER-START-IDX 6)\n\n(defn aset-object [arr idx o]\n  (aget arr idx o))\n\n(defn aget-object [arr idx]\n  (aget arr idx))\n\n\n(defn finished?\n  \"Returns true if the machine is in a finished state\"\n  [state-array]\n  (keyword-identical? (aget state-array STATE-IDX) :finished))\n\n(defn- fn-handler\n  [f]\n  (reify\n   impl/Handler\n   (active? [_] true)\n   (blockable? [_] true)\n   (commit [_] f)))\n\n\n(defn run-state-machine [state]\n  ((aget-object state FN-IDX) state))\n\n(defn run-state-machine-wrapped [state]\n  (try\n    (run-state-machine state)\n    (catch js/Object ex\n      (impl/close! ^not-native (aget-object state USER-START-IDX))\n      (throw ex))))\n\n(defn take! [state blk ^not-native c]\n  (if-let [cb (impl/take! c (fn-handler\n                                   (fn [x]\n                                     (ioc/aset-all! state VALUE-IDX x STATE-IDX blk)\n                                     (run-state-machine-wrapped state))))]\n    (do (ioc/aset-all! state VALUE-IDX @cb STATE-IDX blk)\n        :recur)\n    nil))\n\n(defn put! [state blk ^not-native c val]\n  (if-let [cb (impl/put! c val (fn-handler (fn [ret-val]\n                                             (ioc/aset-all! state VALUE-IDX ret-val STATE-IDX blk)\n                                             (run-state-machine-wrapped state))))]\n    (do (ioc/aset-all! state VALUE-IDX @cb STATE-IDX blk)\n        :recur)\n    nil))\n\n(defn return-chan [state value]\n  (let [^not-native c (aget state USER-START-IDX)]\n           (when-not (nil? value)\n             (impl/put! c value (fn-handler (fn [] nil))))\n           (impl/close! c)\n           c))\n\n(defrecord ExceptionFrame [catch-block\n                           ^Class catch-exception\n                           finally-block\n                           continue-block\n                           prev])\n\n(defn add-exception-frame [state catch-block catch-exception finally-block continue-block]\n  (ioc/aset-all! state\n                 EXCEPTION-FRAMES\n                 (->ExceptionFrame catch-block\n                                   catch-exception\n                                   finally-block\n                                   continue-block\n                                   (aget-object state EXCEPTION-FRAMES))))\n\n(defn process-exception [state]\n  (let [exception-frame (aget-object state EXCEPTION-FRAMES)\n        catch-block (:catch-block exception-frame)\n        catch-exception (:catch-exception exception-frame)\n        exception (aget-object state CURRENT-EXCEPTION)]\n    (cond\n     (and exception\n          (not exception-frame))\n     (throw exception)\n\n     (and exception\n          catch-block\n          (or (= :default catch-exception)\n              (instance? catch-exception exception)))\n     (ioc/aset-all! state\n                    STATE-IDX\n                    catch-block\n                    VALUE-IDX\n                    exception\n                    CURRENT-EXCEPTION\n                    nil\n                    EXCEPTION-FRAMES\n                    (assoc exception-frame\n                      :catch-block nil\n                      :catch-exception nil))\n\n\n     (and exception\n          (not catch-block)\n          (not (:finally-block exception-frame)))\n\n     (do (ioc/aset-all! state\n                        EXCEPTION-FRAMES\n                        (:prev exception-frame))\n         (recur state))\n\n     (and exception\n          (not catch-block)\n          (:finally-block exception-frame))\n     (ioc/aset-all! state\n                    STATE-IDX\n                    (:finally-block exception-frame)\n                    EXCEPTION-FRAMES\n                    (assoc exception-frame\n                      :finally-block nil))\n\n     (and (not exception)\n          (:finally-block exception-frame))\n     (do (ioc/aset-all! state\n                        STATE-IDX\n                        (:finally-block exception-frame)\n                        EXCEPTION-FRAMES\n                        (assoc exception-frame\n                          :finally-block nil)))\n\n     (and (not exception)\n          (not (:finally-block exception-frame)))\n     (do (ioc/aset-all! state\n                   STATE-IDX\n                   (:continue-block exception-frame)\n                   EXCEPTION-FRAMES\n                   (:prev exception-frame)))\n\n     :else (throw (js/Error. \"No matching clause\")))))\n"]}