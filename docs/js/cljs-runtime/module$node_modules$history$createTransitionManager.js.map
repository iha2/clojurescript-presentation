{
"version":3,
"file":"module$node_modules$history$createTransitionManager.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,oDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGrID,OAAAE,WAAA,CAAqB,CAAA,CAIrB,KAAIC,UAE0C,CAJ1CC,MAI0C,CAJ/BN,OAAA,CAAQ,qCAAR,CAI+B,GAFPM,MAEcF,WAAP,CAFPE,MAEO,CAA8B,CAAEC,QAFvCD,MAEqC,CA4E5EJ,QAAAK,QAAA,CA1E8BC,QAAgC,EAAG,CAC/D,IAAIC,OAAS,IAAb,CAoCIC,UAAY,EA6BhB,OAAO,CACLC,UAhEcA,QAAkB,CAACC,UAAD,CAAa,CAC7C,CAAC,CAAA,CAAGP,SAAAE,QAAJ,EAAiC,IAAjC,EAAuBE,MAAvB,CAAuC,8CAAvC,CAEAA,OAAA,CAASG,UAET,OAAO,SAAS,EAAG,CACbH,MAAJ,GAAeG,UAAf,GAA2BH,MAA3B;AAAoC,IAApC,CADiB,CAL0B,CA+DxC,CAELI,oBAvDwBA,QAA4B,CAACC,QAAD,CAAWC,MAAX,CAAmBC,mBAAnB,CAAwCC,QAAxC,CAAkD,CAIxF,IAAd,EAAIR,MAAJ,EACMS,QAEJ,CAF+B,UAAlB,GAAA,MAAOT,OAAP,CAA+BA,MAAA,CAAOK,QAAP,CAAiBC,MAAjB,CAA/B,CAA0DN,MAEvE,CAAsB,QAAtB,GAAI,MAAOS,SAAX,CACqC,UAAnC,GAAI,MAAOF,oBAAX,CACEA,mBAAA,CAAoBE,QAApB,CAA4BD,QAA5B,CADF,EAGE,CAAC,CAAA,CAAGZ,SAAAE,QAAJ,EAAuB,CAAA,CAAvB,CAA8B,iFAA9B,CAEA,CAAAU,QAAA,CAAS,CAAA,CAAT,CALF,CADF,CAUEA,QAAA,CAAoB,CAAA,CAApB,GAASC,QAAT,CAbJ,EAgBED,QAAA,CAAS,CAAA,CAAT,CApBoG,CAqDjG,CAGLE,eA9BmBA,QAAuB,CAACC,EAAD,CAAK,CAC/C,IAAIC,SAAW,CAAA,CAAf,CAEIC,SAAWA,QAAiB,EAAG,CAC7BD,QAAJ;AAAcD,EAAAG,MAAA,CAASC,IAAAA,EAAT,CAAoBC,SAApB,CADmB,CAInCf,UAAAgB,KAAA,CAAeJ,QAAf,CAEA,OAAO,SAAS,EAAG,CACjBD,QAAA,CAAW,CAAA,CACXX,UAAA,CAAYA,SAAAiB,OAAA,CAAiB,QAAS,CAACC,IAAD,CAAO,CAC3C,MAAOA,KAAP,GAAgBN,QAD2B,CAAjC,CAFK,CAT4B,CA2B1C,CAILO,gBAdoBA,QAAwB,EAAG,CAC/C,IAD+C,IACtCC,KAAOL,SAAAM,OAD+B,CACbC,KAAOC,KAAA,CAAMH,IAAN,CADM,CACOI,KAAO,CAA7D,CAAgEA,IAAhE,CAAuEJ,IAAvE,CAA6EI,IAAA,EAA7E,CACEF,IAAA,CAAKE,IAAL,CAAA,CAAaT,SAAA,CAAUS,IAAV,CAGfxB,UAAAyB,QAAA,CAAkB,QAAS,CAACb,QAAD,CAAW,CACpC,MAAOA,SAAAC,MAAA,CAAeC,IAAAA,EAAf,CAA0BQ,IAA1B,CAD6B,CAAtC,CAL+C,CAU1C,CAlEwD,CAXoE;",
"sources":["node_modules/history/createTransitionManager.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$history$createTransitionManager\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nexports.__esModule = true;\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createTransitionManager = function createTransitionManager() {\n  var prompt = null;\n\n  var setPrompt = function setPrompt(nextPrompt) {\n    (0, _warning2.default)(prompt == null, 'A history supports only one prompt at a time');\n\n    prompt = nextPrompt;\n\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  };\n\n  var confirmTransitionTo = function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          (0, _warning2.default)(false, 'A history needs a getUserConfirmation function in order to use a prompt message');\n\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  };\n\n  var listeners = [];\n\n  var appendListener = function appendListener(fn) {\n    var isActive = true;\n\n    var listener = function listener() {\n      if (isActive) fn.apply(undefined, arguments);\n    };\n\n    listeners.push(listener);\n\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  };\n\n  var notifyListeners = function notifyListeners() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(undefined, args);\n    });\n  };\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n};\n\nexports.default = createTransitionManager;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","__esModule","_warning2","_warning","default","createTransitionManager","prompt","listeners","setPrompt","nextPrompt","confirmTransitionTo","location","action","getUserConfirmation","callback","result","appendListener","fn","isActive","listener","apply","undefined","arguments","push","filter","item","notifyListeners","_len","length","args","Array","_key","forEach"]
}
