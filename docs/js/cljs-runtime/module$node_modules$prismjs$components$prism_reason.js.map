{
"version":3,
"file":"module$node_modules$prismjs$components$prism_reason.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,oDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACrIC,KAAAC,UAAAC,OAAA,CAAyBF,KAAAC,UAAAE,OAAA,CAAuB,OAAvB,CAAgC,CACxD,QAAW,CACVC,QAAS,2BADC,CAEVC,WAAY,CAAA,CAFF,CAD6C,CAKxD,OAAU,CACTD,QAAS,mCADA,CAETE,OAAQ,CAAA,CAFC,CAL8C,CAUxD,aAAc,YAV0C,CAWxD,QAAW,2RAX6C;AAYxD,SAAY,8FAZ4C,CAAhC,CAczBN,MAAAC,UAAAM,aAAA,CAA6B,QAA7B,CAAuC,YAAvC,CAAqD,CACpD,UAAa,CACZH,QAAS,yDADG,CAEZI,MAAO,QAFK,CADuC,CAKpD,YAAe,CAEdJ,QAAS,uBAFK,CAGdI,MAAO,UAHO,CALqC,CAUpD,MAAS,CACRJ,QAAS,kBADD,CAERI,MAAO,QAFC,CAV2C,CAArD,CAiBA,QAAOR,KAAAC,UAAAC,OAAAO,SAhC8H;",
"sources":["node_modules/prismjs/components/prism-reason.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$prismjs$components$prism_reason\"] = function(global,process,require,module,exports,shadow$shims) {\nPrism.languages.reason = Prism.languages.extend('clike', {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,\n\t\tlookbehind: true\n\t},\n\t'string': {\n\t\tpattern: /\"(\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n\t\tgreedy: true\n\t},\n\t// 'class-name' must be matched *after* 'constructor' defined below\n\t'class-name': /\\b[A-Z]\\w*/,\n\t'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n\t'operator': /\\.{3}|:[:=]|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n});\nPrism.languages.insertBefore('reason', 'class-name', {\n\t'character': {\n\t\tpattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'])'/,\n\t\talias: 'string'\n\t},\n\t'constructor': {\n\t\t// Negative look-ahead prevents from matching things like String.capitalize\n\t\tpattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n\t\talias: 'variable'\n\t},\n\t'label': {\n\t\tpattern: /\\b[a-z]\\w*(?=::)/,\n\t\talias: 'symbol'\n\t}\n});\n\n// We can't match functions property, so let's not even try.\ndelete Prism.languages.reason.function;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Prism","languages","reason","extend","pattern","lookbehind","greedy","insertBefore","alias","function"]
}
