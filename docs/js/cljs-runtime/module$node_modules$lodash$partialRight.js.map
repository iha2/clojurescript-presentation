{
"version":3,
"file":"module$node_modules$lodash$partialRight.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACrHC,MAAAA,CAAWJ,OAAA,CAAQ,sCAAR,CAD0G,KAErHK,WAAaL,OAAA,CAAQ,wCAAR,CAFwG,CAGrHM,UAAYN,OAAA,CAAQ,uCAAR,CAHyG,CAIrHO,eAAiBP,OAAA,CAAQ,4CAAR,CAJoG,CAyCrHQ,aAAeJ,MAAA,CAAS,QAAQ,CAACK,IAAD,CAAOC,QAAP,CAAiB,CACnD,IAAIC,QAAUJ,cAAA,CAAeG,QAAf,CAAyBJ,SAAA,CAAUE,YAAV,CAAzB,CACd,OAAOH,WAAA,CAAWI,IAAX,CApCqBG,EAoCrB,CAA0CC,IAAAA,EAA1C;AAAqDH,QAArD,CAA+DC,OAA/D,CAF4C,CAAlC,CAMnBH,aAAAM,YAAA,CAA2B,EAE3Bb,OAAAC,QAAA,CAAiBM,YAjDwG;",
"sources":["node_modules/lodash/partialRight.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$partialRight\"] = function(global,process,require,module,exports,shadow$shims) {\nvar baseRest = require('./_baseRest'),\n    createWrap = require('./_createWrap'),\n    getHolder = require('./_getHolder'),\n    replaceHolders = require('./_replaceHolders');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/**\n * This method is like `_.partial` except that partially applied arguments\n * are appended to the arguments it receives.\n *\n * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n * builds, may be used as a placeholder for partially applied arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of partially\n * applied functions.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Function\n * @param {Function} func The function to partially apply arguments to.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new partially applied function.\n * @example\n *\n * function greet(greeting, name) {\n *   return greeting + ' ' + name;\n * }\n *\n * var greetFred = _.partialRight(greet, 'fred');\n * greetFred('hi');\n * // => 'hi fred'\n *\n * // Partially applied with placeholders.\n * var sayHelloTo = _.partialRight(greet, 'hello', _);\n * sayHelloTo('fred');\n * // => 'hello fred'\n */\nvar partialRight = baseRest(function(func, partials) {\n  var holders = replaceHolders(partials, getHolder(partialRight));\n  return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n});\n\n// Assign default placeholders.\npartialRight.placeholder = {};\n\nmodule.exports = partialRight;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","baseRest","createWrap","getHolder","replaceHolders","partialRight","func","partials","holders","WRAP_PARTIAL_RIGHT_FLAG","undefined","placeholder"]
}
