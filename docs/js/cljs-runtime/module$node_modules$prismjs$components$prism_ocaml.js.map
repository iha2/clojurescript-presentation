{
"version":3,
"file":"module$node_modules$prismjs$components$prism_ocaml.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACpIC,KAAAC,UAAAC,MAAA,CAAwB,CACvB,QAAW,kBADY,CAEvB,OAAU,CACT,uBADS,CAET,oDAFS,CAFa,CAMvB,OAAU,0EANa,CAOvB,KAAQ,CACPC,QAAS,kBADF,CAEPC,MAAO,UAFA,CAPe,CAWvB,UAAa,CACZD,QAAS,eADG,CAEZC,MAAO,UAFK,CAXU,CAevB,QAAW,0RAfY;AAgBvB,UAAW,oBAhBY,CAkBvB,SAAY,kGAlBW,CAmBvB,YAAe,kBAnBQ,CAD4G;",
"sources":["node_modules/prismjs/components/prism-ocaml.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$prismjs$components$prism_ocaml\"] = function(global,process,require,module,exports,shadow$shims) {\nPrism.languages.ocaml = {\n\t'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n\t'string': [\n\t\t/\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n\t\t/(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i\n\t],\n\t'number': /\\b-?(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n\t'type': {\n\t\tpattern: /\\B['`][a-z\\d_]*/i,\n\t\talias: 'variable'\n\t},\n\t'directive': {\n\t\tpattern: /\\B#[a-z\\d_]+/i,\n\t\talias: 'function'\n\t},\n\t'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t// Custom operators are allowed\n\t'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&\\*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n\t'punctuation': /[(){}\\[\\]|_.,:;]/\n};\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Prism","languages","ocaml","pattern","alias"]
}
