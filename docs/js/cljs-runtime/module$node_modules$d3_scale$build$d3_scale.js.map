{
"version":3,
"file":"module$node_modules$d3_scale$build$d3_scale.js",
"lineCount":42,
"mappings":"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",
"sources":["node_modules/d3-scale/build/d3-scale.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_scale$build$d3_scale\"] = function(global,process,require,module,exports,shadow$shims) {\n// https://d3js.org/d3-scale/ Version 1.0.7. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-collection'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format'), require('d3-color')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\nvar array = Array.prototype;\n\nvar map$1 = array.map;\nvar slice = array.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range$$1) {\n  var index = d3Collection.map(),\n      domain = [],\n      unknown = implicit;\n\n  range$$1 = range$$1 == null ? [] : slice.call(range$$1);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range$$1[(i - 1) % range$$1.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = d3Collection.map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), scale) : range$$1.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range$$1)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = d3Array.bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = d3Interpolate.interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice.call(_), interpolate$$1 = d3Interpolate.interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n      return d3Format.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return d3Format.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = d3Array.tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = d3Array.tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = d3Array.tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear() {\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[d3Array.bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number$1(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year, month, week, day, hour, minute, second, millisecond, format$$1) {\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format$$1(\".%L\"),\n      formatSecond = format$$1(\":%S\"),\n      formatMinute = format$$1(\"%I:%M\"),\n      formatHour = format$$1(\"%I %p\"),\n      formatDay = format$$1(\"%a %d\"),\n      formatWeek = format$$1(\"%b %d\"),\n      formatMonth = format$$1(\"%B\"),\n      formatYear = format$$1(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(d3Array.tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format$$1(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format$$1));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\nvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar rainbow = d3Color.cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range$$1) {\n  var n = range$$1.length;\n  return function(t) {\n    return range$$1[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nexports.scaleBand = band;\nexports.scalePoint = point;\nexports.scaleIdentity = identity;\nexports.scaleLinear = linear;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$1;\nexports.scaleQuantize = quantize;\nexports.scaleThreshold = threshold;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$1;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","factory","define","amd","d3","d3Array","d3Collection","d3Interpolate","d3Format","d3Time","d3TimeFormat","d3Color","ordinal","range$$1","scale","d","key","i","index","get","unknown","implicit","set","domain","push","length","map","slice","call","scale.domain","_","arguments","n","has","range","scale.range","scale.unknown","copy","scale.copy","band","rescale","reverse","start","stop","step","Math","max","paddingInner","paddingOuter","round","floor","align","bandwidth","values","ordinalRange","undefined","rangeRound","scale.rangeRound","scale.bandwidth","scale.step","scale.round","padding","scale.padding","min","scale.paddingInner","scale.paddingOuter","scale.align","pointish","deinterpolateLinear","a","b","x","constant","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","r","t","bimap","d0","d1","r0","r1","polymap","j","Array","bisect","source","target","interpolate","clamp","continuous","piecewise","output","input","interpolate$$1","unit","invert","scale.invert","y","map$1","number","interpolateRound","scale.clamp","scale.interpolate","linearish","ticks","scale.ticks","count","tickFormat","scale.tickFormat","specifier","tickStep","formatSpecifier","type","value","abs","precision","isNaN","precisionPrefix","formatPrefix","precisionRound","precisionFixed","format","nice","scale.nice","i0","i1","tickIncrement","ceil","linear","interpolateNumber","identity","log","pow","pow10","isFinite","powp","base","E","exp","logp","log10","log2","reflect","f","logs","pows","scale.base","u","v","z","k","p","Infinity","raise","exponent","scale.exponent","quantile$1","thresholds","quantile","invertExtent","scale.invertExtent","indexOf","NaN","sort","ascending","quantiles","scale.quantiles","quantize","x1","x0","threshold","date","Date","number$1","calendar","year","month","week","day","hour","minute","second","millisecond","format$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickInterval","interval","bisector","right","tickIntervals","durationYear","every","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","t0","t1","ramp","sequential","interpolator","scale.interpolator","array","prototype","name","colors","s","match","category10","category20b","category20c","category20","cubehelix$1","interpolateCubehelixLong","cubehelix","warm","cool","rainbow","viridis","magma","inferno","plasma","scaleBand","scalePoint","point","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","sqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","time","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeMillisecond","timeFormat","scaleUtc","utcTime","utcYear","utcMonth","utcWeek","utcDay","utcHour","utcMinute","utcSecond","utcMillisecond","utcFormat","UTC","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","rainbow$1","ts","h","l","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","Object","defineProperty"]
}
