{
"version":3,
"file":"module$node_modules$lodash$_baseFindKey.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAuBzHF,MAAAC,QAAA,CAXAE,QAAoB,CAACC,UAAD,CAAaC,SAAb,CAAwBC,QAAxB,CAAkC,CACpD,IAAIC,MACJD,SAAA,CAASF,UAAT,CAAqB,QAAQ,CAACI,KAAD,CAAQC,GAAR,CAAaL,UAAb,CAAyB,CACpD,GAAIC,SAAA,CAAUG,KAAV,CAAiBC,GAAjB,CAAsBL,UAAtB,CAAJ,CAEE,MADAG,OACO,CADEE,GACF,CAAA,CAAA,CAH2C,CAAtD,CAMA,OAAOF,OAR6C,CAZmE;",
"sources":["node_modules/lodash/_baseFindKey.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseFindKey\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n * without support for iteratee shorthands, which iterates over `collection`\n * using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the found element or its key, else `undefined`.\n */\nfunction baseFindKey(collection, predicate, eachFunc) {\n  var result;\n  eachFunc(collection, function(value, key, collection) {\n    if (predicate(value, key, collection)) {\n      result = key;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFindKey;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","baseFindKey","collection","predicate","eachFunc","result","value","key"]
}
