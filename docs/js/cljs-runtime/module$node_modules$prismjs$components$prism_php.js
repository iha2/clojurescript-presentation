shadow$provide.module$node_modules$prismjs$components$prism_php=function(global,process,require,module,exports,shadow$shims){Prism.languages.php=Prism.languages.extend("clike",{keyword:/\b(and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\b/i,
constant:/\b[A-Z0-9_]{2,}\b/,comment:{pattern:/(^|[^\\])(?:\/\*[\w\W]*?\*\/|\/\/.*)/,lookbehind:!0,greedy:!0}});Prism.languages.insertBefore("php","class-name",{"shell-comment":{pattern:/(^|[^\\])#.*/,lookbehind:!0,alias:"comment"}});Prism.languages.insertBefore("php","keyword",{delimiter:/\?>|<\?(?:php)?/i,variable:/\$\w+\b/i,"package":{pattern:/(\\|namespace\s+|use\s+)[\w\\]+/,lookbehind:!0,inside:{punctuation:/\\/}}});Prism.languages.insertBefore("php","operator",{property:{pattern:/(->)[\w]+/,
lookbehind:!0}});Prism.languages.markup&&(Prism.hooks.add("before-highlight",function(env){"php"===env.language&&(env.tokenStack=[],env.backupCode=env.code,env.code=env.code.replace(/(?:<\?php|<\?)[\w\W]*?(?:\?>)/ig,function(match){env.tokenStack.push(match);return"{{{PHP"+env.tokenStack.length+"}}}"}))}),Prism.hooks.add("before-insert",function(env){"php"===env.language&&(env.code=env.backupCode,delete env.backupCode)}),Prism.hooks.add("after-highlight",function(env){if("php"===env.language){for(var i=
0,t;t=env.tokenStack[i];i++)env.highlightedCode=env.highlightedCode.replace("{{{PHP"+(i+1)+"}}}",Prism.highlight(t,env.grammar,"php").replace(/\$/g,"$$$$"));env.element.innerHTML=env.highlightedCode}}),Prism.hooks.add("wrap",function(env){"php"===env.language&&"markup"===env.type&&(env.content=env.content.replace(/(\{\{\{PHP[0-9]+\}\}\})/g,'\x3cspan class\x3d"token php"\x3e$1\x3c/span\x3e'))}),Prism.languages.insertBefore("php","comment",{markup:{pattern:/<[^?]\/?(.*?)>/,inside:Prism.languages.markup},
php:/\{\{\{PHP[0-9]+\}\}\}/}))}
//# sourceMappingURL=module$node_modules$prismjs$components$prism_php.js.map
