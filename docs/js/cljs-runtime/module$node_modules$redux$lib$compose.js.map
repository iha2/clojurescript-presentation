{
"version":3,
"file":"module$node_modules$redux$lib$compose.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,sCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGvHD,OAAAE,WAAA,CAAqB,CAAA,CACrBF,QAAA,CAAQ,SAAR,CAAA,CAYAG,QAAgB,EAAG,CACjB,IADiB,IACRC,KAAOC,SAAAC,OADC,CACiBC,MAAQC,KAAA,CAAMJ,IAAN,CADzB,CACsCK,KAAO,CAA9D,CAAiEA,IAAjE,CAAwEL,IAAxE,CAA8EK,IAAA,EAA9E,CACEF,KAAA,CAAME,IAAN,CAAA,CAAcJ,SAAA,CAAUI,IAAV,CAGhB,OAAqB,EAArB,GAAIF,KAAAD,OAAJ,CACS,QAAS,CAACI,GAAD,CAAM,CACpB,MAAOA,IADa,CADxB,CAMqB,CAArB,GAAIH,KAAAD,OAAJ,CACSC,KAAA,CAAM,CAAN,CADT,CAIOA,KAAAI,OAAA,CAAa,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAO,CAClC,MAAO,SAAS,EAAG,CACjB,MAAOD,EAAA,CAAEC,CAAAC,MAAA,CAAQC,IAAAA,EAAR,CAAmBV,SAAnB,CAAF,CADU,CADe,CAA7B,CAfU,CAhBoG;",
"sources":["node_modules/redux/lib/compose.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$redux$lib$compose\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = compose;\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","__esModule","compose","_len","arguments","length","funcs","Array","_key","arg","reduce","a","b","apply","undefined"]
}
