{
"version":3,
"file":"module$node_modules$to_style$src$prefixer.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,0CAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAG3H,IAAIC,SAAeJ,OAAA,CAAQ,uDAAR,CAAnB,CACIK,UAAeL,OAAA,CAAQ,wDAAR,CADnB,CAEIM,aAAeN,OAAA,CAAQ,2DAAR,CAFnB,CAGIO,aAAeP,OAAA,CAAQ,2DAAR,CAHnB,CAKIQ,WAAaR,OAAA,CAAQ,6CAAR,CALjB;AAMIS,iBAAmBT,OAAA,CAAQ,mDAAR,CANvB,CAQIU,SAA8B,WAAnB,EAAA,MAAOC,SAAP,CACC,EADD,CAECA,QAAAC,gBAAAC,MAEhBZ,OAAAC,QAAA,CAAiBY,QAAQ,CAACC,aAAD,CAAe,CAEpC,MAAO,SAAQ,CAACC,IAAD,CAAOC,MAAP,CAAc,CACzBA,MAAA,CAASA,MAAT,EAAmB,EADM,KAGrBC,UAAYZ,YAAA,CAAaF,QAAA,CAASY,IAAT,CAAb,CAHS,CAIrBG,QAAYd,SAAA,CAAUW,IAAV,CAEZI,KAAAA,CAAYL,aAAA,CACIG,SADJ,CAEIC,OALpB,KAOIE,UAAYb,UAAAK,MAAA,CACIE,aAAA,CACIP,UAAAK,MADJ,CAEIL,UAAAc,IAHR,CAKI,EAEpB,IAAKJ,SAAL,GAAkBR,SAAlB,CACI,MAAOO,OAAAM,SAAA,CACWH,IADX,CAES,CAAEA,IAAF,CAKhBI,UAAAA,CAAiBJ,IAzBI,KA0BrBK;AAAiBhB,gBAAA,CAAiBU,OAAjB,CACjBO,QAAAA,CAAiB,EAEjBX,cAAJ,GACIS,SADJ,CACiBjB,YAAA,CAAaa,IAAb,CADjB,CAI6B,WAA7B,EAAI,MAAOK,eAAX,GAeI,CAdIE,cACA,CADcF,cAAA,CAAeL,IAAf,CAAwBC,SAAxB,CACd,EADoD,EACpD,CAAe,CAACO,KAAAC,QAAA,CAAcF,cAAd,CAapB,IAZIA,cAYJ,CAZkB,CAACA,cAAD,CAYlB,EATIA,cAAAG,OASJ,GARIH,cAQJ,CARkBA,cAAAI,IAAA,CAAgB,QAAQ,CAACC,QAAD,CAAU,CAC5C,MAAOjB,cAAA,CACKT,YAAA,CAAaF,QAAA,CAAS4B,QAAT,CAAb,CADL,CAEK3B,SAAA,CAAU2B,QAAV,CAHgC,CAAlC,CAQlB,EAAAN,OAAA,CAASA,OAAAO,OAAA,CAAcN,cAAd,CAfb,CAkBIN,UAAJ,EACIK,OAAAQ,KAAA,CAAYb,SAAZ,CAAwBG,SAAxB,CAGJE,QAAAQ,KAAA,CAAYd,IAAZ,CAEA,OAAIH,OAAAM,SAAJ;AAAwC,CAAxC,EAAuBG,OAAAI,OAAvB,CACWJ,OAAA,CAAO,CAAP,CADX,CAIOA,OA7DkB,CAFO,CAfmF;",
"sources":["node_modules/to-style/src/prefixer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$to_style$src$prefixer\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nvar camelize     = require('./stringUtils/camelize')\nvar hyphenate    = require('./stringUtils/hyphenate')\nvar toLowerFirst = require('./stringUtils/toLowerFirst')\nvar toUpperFirst = require('./stringUtils/toUpperFirst')\n\nvar prefixInfo = require('./prefixInfo')\nvar prefixProperties = require('./prefixProperties')\n\nvar docStyle = typeof document == 'undefined'?\n                {}:\n                document.documentElement.style\n\nmodule.exports = function(asStylePrefix){\n\n    return function(name, config){\n        config = config || {}\n\n        var styleName = toLowerFirst(camelize(name)),\n            cssName   = hyphenate(name),\n\n            theName   = asStylePrefix?\n                            styleName:\n                            cssName,\n\n            thePrefix = prefixInfo.style?\n                            asStylePrefix?\n                                prefixInfo.style:\n                                prefixInfo.css\n                            :\n                            ''\n\n        if ( styleName in docStyle ) {\n            return config.asString?\n                              theName :\n                            [ theName ]\n        }\n\n        //not a valid style name, so we'll return the value with a prefix\n\n        var upperCased     = theName,\n            prefixProperty = prefixProperties[cssName],\n            result         = []\n\n        if (asStylePrefix){\n            upperCased = toUpperFirst(theName)\n        }\n\n        if (typeof prefixProperty == 'function'){\n            var prefixedCss = prefixProperty(theName, thePrefix) || []\n            if (prefixedCss && !Array.isArray(prefixedCss)){\n                prefixedCss = [prefixedCss]\n            }\n\n            if (prefixedCss.length){\n                prefixedCss = prefixedCss.map(function(property){\n                    return asStylePrefix?\n                                toLowerFirst(camelize(property)):\n                                hyphenate(property)\n\n                })\n            }\n\n            result = result.concat(prefixedCss)\n        }\n\n        if (thePrefix){\n            result.push(thePrefix + upperCased)\n        }\n\n        result.push(theName)\n\n        if (config.asString || result.length == 1){\n            return result[0]\n        }\n\n        return result\n    }\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","camelize","hyphenate","toLowerFirst","toUpperFirst","prefixInfo","prefixProperties","docStyle","document","documentElement","style","module.exports","asStylePrefix","name","config","styleName","cssName","theName","thePrefix","css","asString","upperCased","prefixProperty","result","prefixedCss","Array","isArray","length","map","property","concat","push"]
}
