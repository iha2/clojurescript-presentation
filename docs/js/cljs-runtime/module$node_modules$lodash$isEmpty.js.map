{
"version":3,
"file":"module$node_modules$lodash$isEmpty.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,mCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IAChHC,SAAWJ,OAAA,CAAQ,sCAAR,CADqG,CAEhHK,OAASL,OAAA,CAAQ,oCAAR,CAFuG,CAGhHM,YAAcN,OAAA,CAAQ,wCAAR,CAHkG,CAIhHO,QAAUP,OAAA,CAAQ,oCAAR,CAJsG,CAKhHQ,YAAcR,OAAA,CAAQ,wCAAR,CALkG,CAMhHS,SAAWT,OAAA,CAAQ,qCAAR,CANqG,CAOhHU,YAAcV,OAAA,CAAQ,yCAAR,CAPkG;AAQhHW,aAAeX,OAAA,CAAQ,yCAAR,CARiG,CAkBhHY,eAHcC,MAAAC,UAGGF,eA2DrBX,OAAAC,QAAA,CAxBAa,QAAgB,CAACC,KAAD,CAAQ,CACtB,GAAa,IAAb,EAAIA,KAAJ,CACE,MAAO,CAAA,CAET,IAAIR,WAAA,CAAYQ,KAAZ,CAAJ,GACKT,OAAA,CAAQS,KAAR,CADL,EACuC,QADvC,EACuB,MAAOA,MAD9B,EAC0E,UAD1E,EACmD,MAAOA,MAAAC,OAD1D,EAEMR,QAAA,CAASO,KAAT,CAFN,EAEyBL,YAAA,CAAaK,KAAb,CAFzB,EAEgDV,WAAA,CAAYU,KAAZ,CAFhD,EAGE,MAAO,CAACA,KAAAE,OAEV,KAAIC,IAAMd,MAAA,CAAOW,KAAP,CACV,IApDWI,cAoDX,EAAID,GAAJ,EAnDWE,cAmDX,EAAqBF,GAArB,CACE,MAAO,CAACH,KAAAM,KAEV,IAAIZ,WAAA,CAAYM,KAAZ,CAAJ,CACE,MAAO,CAACZ,QAAA,CAASY,KAAT,CAAAE,OAEV,KAAKK,IAAIA,GAAT,GAAgBP,MAAhB,CACE,GAAIJ,cAAAY,KAAA,CAAoBR,KAApB;AAA2BO,GAA3B,CAAJ,CACE,MAAO,CAAA,CAGX,OAAO,CAAA,CArBe,CArD4F;",
"sources":["node_modules/lodash/isEmpty.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$isEmpty\"] = function(global,process,require,module,exports,shadow$shims) {\nvar baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","baseKeys","getTag","isArguments","isArray","isArrayLike","isBuffer","isPrototype","isTypedArray","hasOwnProperty","Object","prototype","isEmpty","value","splice","length","tag","mapTag","setTag","size","key","call"]
}
