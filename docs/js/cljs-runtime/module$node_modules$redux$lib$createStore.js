shadow$provide.module$node_modules$redux$lib$createStore=function(global,process,require,module,exports,shadow$shims){function createStore(reducer,preloadedState,enhancer){function subscribe(listener){if("function"!==typeof listener)throw Error("Expected listener to be a function.");var isSubscribed=!0;nextListeners===currentListeners&&(nextListeners=currentListeners.slice());nextListeners.push(listener);return function(){if(isSubscribed){isSubscribed=!1;nextListeners===currentListeners&&(nextListeners=
currentListeners.slice());var index=nextListeners.indexOf(listener);nextListeners.splice(index,1)}}}function dispatch(action){if(!(0,_isPlainObject2["default"])(action))throw Error("Actions must be plain objects. Use custom middleware for async actions.");if("undefined"===typeof action.type)throw Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(isDispatching)throw Error("Reducers may not dispatch actions.");try{isDispatching=!0,currentState=currentReducer(currentState,
action)}finally{isDispatching=!1}for(var listeners=currentListeners=nextListeners,i=0;i<listeners.length;i++)(0,listeners[i])();return action}var _ref2;"function"===typeof preloadedState&&"undefined"===typeof enhancer&&(enhancer=preloadedState,preloadedState=void 0);if("undefined"!==typeof enhancer){if("function"!==typeof enhancer)throw Error("Expected the enhancer to be a function.");return enhancer(createStore)(reducer,preloadedState)}if("function"!==typeof reducer)throw Error("Expected the reducer to be a function.");
var currentReducer=reducer,currentState=preloadedState,currentListeners=[],nextListeners=currentListeners,isDispatching=!1;dispatch({type:ActionTypes.INIT});return _ref2={dispatch:dispatch,subscribe:subscribe,getState:function(){return currentState},replaceReducer:function(nextReducer){if("function"!==typeof nextReducer)throw Error("Expected the nextReducer to be a function.");currentReducer=nextReducer;dispatch({type:ActionTypes.INIT})}},_ref2[_symbolObservable2["default"]]=function(){var _ref;return _ref=
{subscribe:function(observer){function observeState(){observer.next&&observer.next(currentState)}if("object"!==typeof observer)throw new TypeError("Expected the observer to be an object.");observeState();return{unsubscribe:subscribe(observeState)}}},_ref[_symbolObservable2["default"]]=function(){return this},_ref},_ref2}exports.__esModule=!0;exports.ActionTypes=void 0;exports["default"]=createStore;var _isPlainObject2=(global=require("module$node_modules$lodash$isPlainObject"))&&global.__esModule?
global:{"default":global},_symbolObservable2=(require=require("module$node_modules$symbol_observable$lib$index"))&&require.__esModule?require:{"default":require},ActionTypes=exports.ActionTypes={INIT:"@@redux/INIT"}}
//# sourceMappingURL=module$node_modules$redux$lib$createStore.js.map
