{
"version":3,
"file":"module$node_modules$lodash$maxBy.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,iCAAA,CAAqD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IAC9GC,aAAeJ,OAAA,CAAQ,0CAAR,CAD+F,CAE9GK,OAASL,OAAA,CAAQ,oCAAR,CAFqG,CAG9GM,aAAeN,OAAA,CAAQ,0CAAR,CA+BnBC,OAAAC,QAAA,CANAK,QAAc,CAACC,KAAD,CAAQC,QAAR,CAAkB,CAC9B,MAAQD,MAAD,EAAUA,KAAAE,OAAV,CACHN,YAAA,CAAaI,KAAb,CAAoBF,YAAA,CAAaG,QAAb,CAAuB,CAAvB,CAApB,CAA+CJ,MAA/C,CADG,CAEHM,IAAAA,EAH0B,CA5BkF;",
"sources":["node_modules/lodash/maxBy.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$maxBy\"] = function(global,process,require,module,exports,shadow$shims) {\nvar baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * This method is like `_.max` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\nfunction maxBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt)\n    : undefined;\n}\n\nmodule.exports = maxBy;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","baseExtremum","baseGt","baseIteratee","maxBy","array","iteratee","length","undefined"]
}
