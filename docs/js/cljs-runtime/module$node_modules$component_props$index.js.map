{
"version":3,
"file":"module$node_modules$component_props$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,0CAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAiD3HC,QAASA,IAAG,CAACC,GAAD,CAAMC,KAAN,CAAaC,EAAb,CAAiB,CAE3B,MAAOF,IAAAG,QAAA,CADEC,yDACF,CAAgB,QAAQ,CAACC,CAAD,CAAG,CAChC,MAAI,GAAJ,EAAWA,CAAA,CAAEA,CAAAC,OAAF,CAAa,CAAb,CAAX,CAAmCJ,EAAA,CAAGG,CAAH,CAAnC,CACK,CAACJ,KAAAM,QAAA,CAAcF,CAAd,CAAN,CACOH,EAAA,CAAGG,CAAH,CADP,CAA+BA,CAFC,CAA3B,CAFoB,CAgC7BG,QAASA,SAAQ,CAACR,GAAD,CAAM,CACrB,MAAO,SAAQ,CAACK,CAAD,CAAG,CAChB,MAAOL,IAAP,CAAaK,CADG,CADG,CA5EvB,IAAII,QAAU,oCAWdb,OAAAC,QAAA,CAAiBa,QAAQ,CAACV,GAAD,CAAME,EAAN,CAAS,CAqDhC,IArCO,IAAA,IAfcF,GAedG,QAAA,CACI,4CADJ,CACkD,EADlD,CAAAA,QAAA,CAEIM,OAFJ;AAEa,EAFb,CAAAE,MAAA,CAGE,eAHF,CAAA,EAIF,EAJE,CAmCHC,IAAM,EAnCH,CAqCEC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBC,GAAAR,OAApB,CAAgCO,CAAA,EAAhC,CACM,CAACD,GAAAL,QAAA,CAAYO,GAAA,CAAID,CAAJ,CAAZ,CAAL,EACAD,GAAAG,KAAA,CAASD,GAAA,CAAID,CAAJ,CAAT,CArDEX,GAAJ,EAAU,QAAV,EAAsB,MAAOA,GAA7B,GAAiCA,EAAjC,CAAsCM,QAAA,CAASN,EAAT,CAAtC,CACA,OAAIA,GAAJ,CAAeH,GAAA,CAAIC,GAAJ,CAuDRY,GAvDQ,CAAYV,EAAZ,CAAf,CAuDOU,GA1DyB,CAhByF;",
"sources":["node_modules/component-props/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$component_props$index\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Global Names\n */\n\nvar globals = /\\b(Array|Date|Object|Math|JSON)\\b/g;\n\n/**\n * Return immediate identifiers parsed from `str`.\n *\n * @param {String} str\n * @param {String|Function} map function or prefix\n * @return {Array}\n * @api public\n */\n\nmodule.exports = function(str, fn){\n  var p = unique(props(str));\n  if (fn && 'string' == typeof fn) fn = prefixed(fn);\n  if (fn) return map(str, p, fn);\n  return p;\n};\n\n/**\n * Return immediate identifiers in `str`.\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nfunction props(str) {\n  return str\n    .replace(/\\.\\w+|\\w+ *\\(|\"[^\"]*\"|'[^']*'|\\/([^/]+)\\//g, '')\n    .replace(globals, '')\n    .match(/[a-zA-Z_]\\w*/g)\n    || [];\n}\n\n/**\n * Return `str` with `props` mapped with `fn`.\n *\n * @param {String} str\n * @param {Array} props\n * @param {Function} fn\n * @return {String}\n * @api private\n */\n\nfunction map(str, props, fn) {\n  var re = /\\.\\w+|\\w+ *\\(|\"[^\"]*\"|'[^']*'|\\/([^/]+)\\/|[a-zA-Z_]\\w*/g;\n  return str.replace(re, function(_){\n    if ('(' == _[_.length - 1]) return fn(_);\n    if (!~props.indexOf(_)) return _;\n    return fn(_);\n  });\n}\n\n/**\n * Return unique array.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nfunction unique(arr) {\n  var ret = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    if (~ret.indexOf(arr[i])) continue;\n    ret.push(arr[i]);\n  }\n\n  return ret;\n}\n\n/**\n * Map with prefix `str`.\n */\n\nfunction prefixed(str) {\n  return function(_){\n    return str + _;\n  };\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","map","str","props","fn","replace","re","_","length","indexOf","prefixed","globals","module.exports","match","ret","i","arr","push"]
}
