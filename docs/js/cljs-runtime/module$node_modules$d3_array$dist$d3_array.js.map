{
"version":3,
"file":"module$node_modules$d3_array$dist$d3_array.js",
"lineCount":18,
"mappings":"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",
"sources":["node_modules/d3-array/dist/d3-array.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_array$dist$d3_array\"] = function(global,process,require,module,exports,shadow$shims) {\n// https://d3js.org/d3-array/ v1.2.4 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction bisector(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nfunction pairs(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nfunction cross(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction number(x) {\n  return x === null ? NaN : +x;\n}\n\nfunction variance(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n\nfunction deviation(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n\nfunction extent(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction identity(x) {\n  return x;\n}\n\nfunction range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nfunction sturges(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n\nfunction histogram() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n\nfunction quantile(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction freedmanDiaconis(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction scott(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction max(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n\nfunction mean(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n\nfunction median(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n\nfunction merge(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n\nfunction min(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n\nfunction permute(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n\nfunction scan(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n\nfunction shuffle(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n\nfunction sum(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n\nfunction zip() {\n  return transpose(arguments);\n}\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","factory","define","amd","d3","ascending","a","b","NaN","bisector","compare","length","ascendingComparator","left","x","lo","hi","mid","right","f","d","pair","number","variance","values","valueof","n","m","i","mean","value","sum","isNaN","delta","deviation","array","v","Math","sqrt","extent","min","max","constant","identity","range","start","stop","step","arguments","ceil","Array","tickIncrement","count","power","floor","log","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","sturges","LN2","quantile","p","i0","value0","value1","transpose","matrix","j","row","ascendingBisect","bisectRight","bisectLeft","prototype","slice","map","bisect","cross","values0","values1","reduce","n0","n1","i1","descending","histogram","data","xz","domain","x0","x1","tz","threshold","isArray","shift","pop","bins","bin","push","histogram.value","_","histogram.domain","thresholds","histogram.thresholds","call","thresholdFreedmanDiaconis","freedmanDiaconis","sort","thresholdScott","scott","thresholdSturges","median","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","t","random","ticks","reverse","isFinite","zip","Object","defineProperty"]
}
