shadow$provide.module$node_modules$d3_collection$dist$d3_collection=function(global$jscomp$0,process,require,module,exports$jscomp$0,shadow$shims){(function(global,factory){"object"===typeof exports$jscomp$0&&"undefined"!==typeof module?factory(exports$jscomp$0):"function"===typeof define&&define.amd?define(["exports"],factory):factory(global.d3=global.d3||{})})(this,function(exports){function Map(){}function map$jscomp$0(object,f){var map=new Map;if(object instanceof Map)object.each(function(value,
key){map.set(key,value)});else if(Array.isArray(object)){var i=-1,n=object.length,o;if(null==f)for(;++i<n;)map.set(i,object[i]);else for(;++i<n;)map.set(f(o=object[i],i,object),o)}else if(object)for(i in object)map.set(i,object[i]);return map}function createObject(){return{}}function setObject(object,key,value){object[key]=value}function createMap(){return map$jscomp$0()}function setMap(map$$1,key,value){map$$1.set(key,value)}function Set(){}function set$jscomp$0(object,f){var set=new Set;if(object instanceof
Set)object.each(function(value){set.add(value)});else if(object){var i=-1,n=object.length;if(null==f)for(;++i<n;)set.add(object[i]);else for(;++i<n;)set.add(f(object[i],i,object))}return set}Map.prototype=map$jscomp$0.prototype={constructor:Map,has:function(key){return"$"+key in this},get:function(key){return this["$"+key]},set:function(key,value){this["$"+key]=value;return this},remove:function(key){key="$"+key;return key in this&&delete this[key]},clear:function(){for(var property in this)"$"===
property[0]&&delete this[property]},keys:function(){var keys=[],property;for(property in this)"$"===property[0]&&keys.push(property.slice(1));return keys},values:function(){var values=[],property;for(property in this)"$"===property[0]&&values.push(this[property]);return values},entries:function(){var entries=[],property;for(property in this)"$"===property[0]&&entries.push({key:property.slice(1),value:this[property]});return entries},size:function(){var size=0,property;for(property in this)"$"===property[0]&&
++size;return size},empty:function(){for(var property in this)if("$"===property[0])return!1;return!0},each:function(f){for(var property in this)"$"===property[0]&&f(this[property],property.slice(1),this)}};var proto=map$jscomp$0.prototype;Set.prototype=set$jscomp$0.prototype={constructor:Set,has:proto.has,add:function(value){value+="";this["$"+value]=value;return this},remove:proto.remove,clear:proto.clear,values:proto.keys,size:proto.size,empty:proto.empty,each:proto.each};exports.nest=function(){function apply(array,
depth,createResult,setResult){if(depth>=keys.length)return null!=sortValues&&array.sort(sortValues),null!=rollup?rollup(array):array;for(var i=-1,n=array.length,key$jscomp$0=keys[depth++],keyValue,value,valuesByKey=map$jscomp$0(),values$jscomp$0,result=createResult();++i<n;)(values$jscomp$0=valuesByKey.get(keyValue=key$jscomp$0(value=array[i])+""))?values$jscomp$0.push(value):valuesByKey.set(keyValue,[value]);valuesByKey.each(function(values,key){setResult(result,key,apply(values,depth,createResult,
setResult))});return result}function entries(map$$1,depth){if(++depth>keys.length)return map$$1;var sortKey=sortKeys[depth-1];if(null!=rollup&&depth>=keys.length)var array=map$$1.entries();else array=[],map$$1.each(function(v,k){array.push({key:k,values:entries(v,depth)})});return null!=sortKey?array.sort(function(a,b){return sortKey(a.key,b.key)}):array}var keys=[],sortKeys=[],sortValues,rollup,nest;return nest={object:function(array){return apply(array,0,createObject,setObject)},map:function(array){return apply(array,
0,createMap,setMap)},entries:function(array){return entries(apply(array,0,createMap,setMap),0)},key:function(d){keys.push(d);return nest},sortKeys:function(order){sortKeys[keys.length-1]=order;return nest},sortValues:function(order){sortValues=order;return nest},rollup:function(f){rollup=f;return nest}}};exports.set=set$jscomp$0;exports.map=map$jscomp$0;exports.keys=function(map){var keys=[],key;for(key in map)keys.push(key);return keys};exports.values=function(map){var values=[],key;for(key in map)values.push(map[key]);
return values};exports.entries=function(map){var entries=[],key;for(key in map)entries.push({key:key,value:map[key]});return entries};Object.defineProperty(exports,"__esModule",{value:!0})})}
//# sourceMappingURL=module$node_modules$d3_collection$dist$d3_collection.js.map
